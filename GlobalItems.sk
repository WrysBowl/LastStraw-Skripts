on item spawn:
	if line 1 of event-item's lore is set:
		set {_size} to size of event-item's lore
		set {_lore} to ": %line 1 of event-item's lore%"
		set {_lastLore} to uncolored line {_size} of event-item's lore
		loop length of {_lastLore} times:
			if ("0123456789") contains char at (loop-value)-1 in {_lastLore}:
				add (char at (loop-value)-1 in {_lastLore}) to {_lore::*}
		if "%{_lastLore}%" contains ("Common", "Uncommon", "Rare", "Legendary" or "Emperor"):
			set {_lore} to ": %join {_lore::*}%%%"
		else:
			set {_lore} to ": %{_lore}%"
		if length of {_lore} < 3:
			set {_lore} to ""
	else:
		set {_lore} to ""
	if item amount of event-item > 1:
		set {_itemAmount} to "&7+%item amount of event-item% "
	else:
		set {_itemAmount} to ""
	set {_itemName} to "%{_itemAmount}%%name of event-item%%{_lore}%"
	if {_itemName} does not contain "<none>":
		set display name of event-entity to "%{_itemName}%"

function itemGenerator(item: item, name: string, basePercent: number, baseMultiplier: number, stats: strings, statValues: numbers, lore: strings, classReq: string, levelReq: integer) :: item:
	loop length of {_name} times: #Finds the color code in the name
		if char at (loop-value)-1 in {_name} is "&":
			set {_prefixColor} to "&%char at (loop-value + 1) in {_name}%"
	if {_basePercent} < 101:
		set {_randomPercentage} to 0
		while {_randomPercentage} < 1:
			set {_randomPercentage} to rounded up ((random number between 1 and 100)*(1/random number between 1 and 5))
		if {_randomPercentage} < {_basePercent}:
			set {_randomPercentage} to {_basePercent}
		if {_randomPercentage} > 100:
			set {_randomPercentage} to 100
		else if {_randomPercentage} > 10:
			set {_randomPercentage} to rounded up {_randomPercentage}
		else if {_randomPercentage} < 1:
			set {_randomPercentage} to 1
		if {_randomPercentage} is between 0 and 40:
			set {_prefixColor} to "&f"
			set {_rarity} to "Common"
			add 1 to {_statRolls}
		else if {_randomPercentage} is between 40 and 64:
			set {_prefixColor} to "&a"
			set {_rarity} to "Uncommon"
			add 2 to {_statRolls}
		else if {_randomPercentage} is between 65 and 84:
			set {_prefixColor} to "&9"
			set {_rarity} to "Rare"
			add 3 to {_statRolls}
		else if {_randomPercentage} is between 85 and 99:
			set {_prefixColor} to "&6"
			set {_rarity} to "Legendary"
			add 4 to {_statRolls}
		else if {_randomPercentage} is between 95 and 100:
			set {_prefixColor} to "&4"
			set {_rarity} to "Emperor"
			add 5 to {_statRolls}
		add ({_levelReq}*{_statRolls}) to {_extraStatPool} #To be used for applying extra stat percentages
		set {_item}'s name to "%{_prefixColor}%%{_name}%%{_prefixColor}%"
		add 1 to {_loreLine}
		set {_itemDrop} to {_item}
		add "{Rarity:%{_randomPercentage}%}" to {_itemDrop}'s nbt
		if {_item} is a helmet, chestplate, leggings or boots: #Adds strings to a list for stat add
			add "HP" to {_baseStats::*}
			add "Defense" to {_baseStats::*}
		else:
			add "Damage" to {_baseStats::*}
			add "CooldownSpeed" to {_baseStats::*}
		set {_tab} to "✦"
		set {_baseMultiplier} to ({_baseMultiplier}*(1+({_randomPercentage}/100))) #percentage allows multiplier to increases by a max of 2 times
		loop {_baseStats::*}: #Checks for the main four stats and adds them to the item accordingly
			add 1 to {_loreLine}
			if loop-value is "HP":
				set {_value} to rounded up (7*{_baseMultiplier})
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%%{_tab}%&7 %{_value}% %loop-value% &c♥ +"
				add "{%loop-value%:%{_value}%}" to {_itemDrop}'s nbt
			else if loop-value is "Defense":
				set {_value} to rounded up (6*{_baseMultiplier})
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%%{_tab}%&7 %{_value}% %loop-value% &9🛡 +"
				add "{%loop-value%:%{_value}%}" to {_itemDrop}'s nbt
			else if loop-value is "Damage":
				set {_value} to rounded up (4*{_baseMultiplier})
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%%{_tab}%&7 %{_value}% %loop-value% &4🗡 +"
				add "{Attack:%{_value}%}" to {_itemDrop}'s nbt
			else if loop-value is "CooldownSpeed":
				set {_value} to (3*{_baseMultiplier})
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%%{_tab}%&7 %{_value}%%% %loop-value% &b❆ +"
				add "{%loop-value%:%{_value}%}" to {_itemDrop}'s nbt
			set {_tab} to "  "
		add 2 to {_loreLine}
		set {_value} to rounded up {_baseMultiplier}
		if {_classReq} is "Warrior":
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Strength &4⚔ +"
			add "{Strength:%{_value}%}" to {_itemDrop}'s nbt
		else if {_classReq} is "Archer":
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Dexterity &a➶ +"
			add "{Dexterity:%{_value}%}" to {_itemDrop}'s nbt
		else if {_classReq} is "Mage":
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Intelligence &b⭐ +"
			add "{Intelligence:%{_value}%}" to {_itemDrop}'s nbt
		else if {_classReq} is "Shaman":
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Wisdom &d♤ +"
			add "{Wisdom:%{_value}%}" to {_itemDrop}'s nbt
		else:
			set {_PickRClass} to random integer between 1 and 4
			if {_PickRClass} is 1:
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Strength &4⚔ +"
				add "{Strength:%{_value}%}" to {_itemDrop}'s nbt
			else if {_PickRClass} is 2:
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Dexterity &a➶ +"
				add "{Dexterity:%{_value}%}" to {_itemDrop}'s nbt
			else if {_PickRClass} is 3:
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Intelligence &b⭐ +"
				add "{Intelligence:%{_value}%}" to {_itemDrop}'s nbt
			else if {_PickRClass} is 4:
				set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%❃ &7%{_value}% &7Wisdom &d♤ +"
				add "{Wisdom:%{_value}%}" to {_itemDrop}'s nbt
		add 1 to {_loreLine}
		set {_value} to round({_baseMultiplier})
		set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_value}% &7Stamina &e❤ +"
		add "{Stamina:%{_value}%}" to {_itemDrop}'s nbt
		while {_extraStatPool} > 0:
			add 1 to {_counter}
			if {_counter} > 20:
				set {_extraStatPool} to 0
			set {_randBonusValue} to random integer from 20 to 100 #value of 0-100 for added stat
			if ({_extraStatPool}-{_randBonusValue}) < 0:
				set {_randBonusValue} to (difference between 0 and {_extraStatPool})
			set {_randRoll} to random element out of ("Luck","HPRegen","MPRegen","Block" and "Critical")
			if {_randRoll} contains "Luck":
				if ({_luck}+{_randBonusValue}) <= 100:
					add {_randBonusValue} to {_luck}
					remove {_randBonusValue} from {_extraStatPool}
				else if {_luck} < 100:
					remove (difference between {_luck} and 100) from {_extraStatPool}
					set {_luck} to 100
			else if {_randRoll} contains "HPRegen":
				if ({_HPRegen}+{_randBonusValue}) <= 100:
					add {_randBonusValue} to {_HPRegen}
					remove {_randBonusValue} from {_extraStatPool}
				else if {_HPRegen} < 100:
					remove (difference between {_HPRegen} and 100) from {_extraStatPool}
					set {_HPRegen} to 100
			else if {_randRoll} contains "MPRegen":
				if ({_MPRegen}+{_randBonusValue}) <= 100:
					add {_randBonusValue} to {_MPRegen}
					remove {_randBonusValue} from {_extraStatPool}
				else if {_MPRegen} < 100:
					remove (difference between {_MPRegen} and 100) from {_extraStatPool}
					set {_MPRegen} to 100
			else if {_randRoll} contains "Block":
				if ({_block}+{_randBonusValue}) <= 100:
					add {_randBonusValue} to {_block}
					remove {_randBonusValue} from {_extraStatPool}
				else if {_block} < 100:
					remove (difference between {_block} and 100) from {_extraStatPool}
					set {_block} to 100
			else if {_randRoll} contains "Critical":
				if ({_critical}+{_randBonusValue}) <= 100:
					add {_randBonusValue} to {_critical}
					remove {_randBonusValue} from {_extraStatPool}
				else if {_critical} < 100:
					remove (difference between {_critical} and 100) from {_extraStatPool}
					set {_critical} to 100
		if {_luck} is set:
			add 1 to {_loreLine}
			set {_value} to ({_luck}/25)
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_value}%%% &7Luck &a♧ +"
			add "{Luck:%{_value}%}" to {_itemDrop}'s nbt
		else if {_HPRegen} is set:
			add 1 to {_loreLine}
			set {_value} to ({_HPRegen}/30)
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_value}% &7HP/5 sec &c❣ +"
			add "{HPRegen:%{_value}%}" to {_itemDrop}'s nbt
		else if {_MPRegen} is set:
			add 1 to {_loreLine}
			set {_value} to ({_MPRegen}/30)
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_value}% &7MP/5 sec &b☼ +"
			add "{MPRegen:%{_value}%}" to {_itemDrop}'s nbt
		else if {_block} is set:
			add 1 to {_loreLine}
			set {_value} to ({_block}/30)
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_value}%%% &7Block &9🛡 +"
			add "{Block:%{_value}%}" to {_itemDrop}'s nbt
		else if {_critical} is set:
			add 1 to {_loreLine}
			set {_value} to ({_critical}/25)
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_value}%%% &7Crit Chance &9✸ +"
			add "{Critical:%{_value}%}" to {_itemDrop}'s nbt
	if {_stats::*} is not "":
		loop size of {_stats::*} times:
			add 1 to {_loreLine}
			set {_statValues::%loop-value%} to {_statValues::%loop-value%}*({_randomPercentage}/100)
			set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%   &7%{_statValues::%loop-value%}% %{_stats::%loop-value%}%"
			add "{%{_stats::%loop-value%}%:%{_statValues::%loop-value%}%}" to {_itemDrop}'s nbt
	add 1 to {_loreLine}
	#set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%&8———————————————"
	if {_levelReq} > 0:
		add 1 to {_loreLine}
		set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%⇫ Level: %{_levelReq}%"
		add "{LevelReq:%{_levelReq}%}" to {_itemDrop}'s nbt
	if {_classReq} is not "":
		add 1 to {_loreLine}
		set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%☯ Class: %{_classReq}%"
		add "{ClassReq:%{_classReq}%}" to {_itemDrop}'s nbt
	if {_lore::*} is not "":
		add 1 to {_loreLine}
		loop size of {_lore::*} times:
			add 1 to {_loreLine}
			set line {_loreLine} of {_itemDrop}'s lore to "&6%{_lore::%loop-value%}%"
	add 1 to {_loreLine}
	#set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%&8———————————————"
	add 1 to {_loreLine}
	set {_PickPrice} to rounded up (({_levelReq}*{_randomPercentage})/5)
	set line {_loreLine} of {_itemDrop}'s lore to "&e %{_PickPrice}% ⛃"
	add 1 to {_loreLine}
	set {_type::*} to ("%{_item}'s type%") split at " "
	if {_type::1} is "Stick":
		set {_type::2} to "Wand"
	set line {_loreLine} of {_itemDrop}'s lore to "%{_prefixColor}%〔%{_rarity}% %{_prefixColor}%%2nd element of {_type::*} ? 1st element of {_type::*} in strict proper case% %{_prefixColor}%%{_randomPercentage}%%%%{_prefixColor}%〕"
	add "{AttributeModifiers:[{AttributeName:""generic.armor"",Name:""armor"",Amount:0,Operation:0,UUIDLeast:1,UUIDMost:1}]}" to {_itemDrop}'s nbt
	{_item} is not bow:
		add "{Unbreakable:1b}" to {_itemDrop}'s nbt
	add "{HideFlags:63}" to {_itemDrop}'s nbt
	add "{Price:%{_PickPrice}%}" to {_itemDrop}'s nbt
	set {_itemDrop} to {_itemDrop} with all flags hidden
	repair {_itemDrop}
	return {_itemDrop}