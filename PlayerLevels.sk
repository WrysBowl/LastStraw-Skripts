function levelIncrease(exp: number, player: player):
	set metadata tag "interruptActionBar" of {_player} to true
	if {_exp} is not 0:
		#broadcast "%{_exp}%"
		send action bar "&5+ %{_exp}% EXP" to {_player}
	set {_profile} to (metadata tag "profile" of {_player})
	set {_uuid} to {_player}'s uuid
	if {level::%{_uuid}%::%{_profile}%} >= 100:
		set {_player}'s level to 100
		set {_player}'s level progress to 0
		set {level::%{_uuid}%::%{_profile}%} to 100
		stop
	else if {level::%{_uuid}%::%{_profile}%} is not set:
		set {level::%{_uuid}%::%{_profile}%} to 1
	set {_levelCeiling} to rounded up ({level::%{_uuid}%::%{_profile}%}^2)+10
	if ({exp::%{_uuid}%::%{_profile}%}+{_exp}) >= {_levelCeiling}:
		while ({exp::%{_uuid}%::%{_profile}%}+{_exp}) >= {_levelCeiling}:
			set {exp::%{_uuid}%::%{_profile}%} to (({_exp}+{exp::%{_uuid}%::%{_profile}%}) - {_levelCeiling})
			add 1 to {level::%{_uuid}%::%{_profile}%}
			add 3 to {statPoints::%{_uuid}%::%{_profile}%}
			send title "&5Leveled Up!" with subtitle "&dYou are now level %{level::%{_uuid}%::%{_profile}%}%" to {_player} for 1 seconds
			play sound "entity.ender_dragon.growl0" with volume 1 to {_player}
			set {_levelCeiling} to rounded up ({level::%{_uuid}%::%{_profile}%}^2)+10
			set {_player}'s level to {level::%{_uuid}%::%{_profile}%}
			set {_player}'s level progress to ({exp::%{_uuid}%::%{_profile}%}/{_levelCeiling})
			if {level::%{_uuid}%::%{_profile}%} >= 100:
				exit 1 loop
			wait 1 tick
		wait 2 second
		send subtitle "&dType /stats to use your &b%{statPoints::%{_uuid}%::%{_profile}%}% &dstat points" to {_player} for 1 seconds
		exit 1 section
	else:
		add {_exp} to {exp::%{_uuid}%::%{_profile}%}
	if {level::%{_uuid}%::%{_profile}%} >= 100:
		set {_player}'s level to 100
		set {_player}'s level progress to 0
		set {level::%{_uuid}%::%{_profile}%} to 100
	else:
		set {_player}'s level to {level::%{_uuid}%::%{_profile}%}
		set {_player}'s level progress to ({exp::%{_uuid}%::%{_profile}%}/{_levelCeiling})
	
command /level:
	trigger:
		set {_profile} to (metadata tag "profile" of player)
		set {_player} to player
		set {_uuid} to uuid of player
		set {_exp} to 0
		set {_levelCeiling} to rounded up ({level::%{_uuid}%::%{_profile}%}^2)+10
		set {_xp} to ({exp::%{_uuid}%::%{_profile}%}+{_exp})
		set {_xp2} to difference between {_xp} and {_levelCeiling}
		set {_xp4} to {_xp}+{_xp2}
		set {_xp3} to {_xp}/{_xp4}
		set {_xp3} to {_xp3}*100
		message "&aLevel: %{level::%{_uuid}%::%{_profile}%}%&a Xp: %{_xp}% &aXp Needed: %{_xp2}% &a[%{_xp3}%&a%%]"
	
function levelIncreaseParty(exp: number, player: player):
	set {_profile} to (metadata tag "profile" of {_player})
	set {_partyMembers::*} to all players where [(metadata tag "party" of {_player}) = (metadata tag "party" of {_player})]
	set {_size} to size of {_partyMembers::*}
	set {_size} to {_size}-1
	set {_size} to {_size}/4
	set {_exp} to {_exp}*{_size}
	loop {_partyMembers::*}:
		add 1 to {_number}
		{_player} is not {_partyMembers::%{_number}%}
		set {_player} to {_partyMembers::%{_number}%}
		set {_uuid} to {_player}'s uuid
		if {_player}'s level >= 100:
			set {_player}'s level to 100
			set {_player}'s level progress to 0
			stop
		set {_levelCeiling} to rounded up (({_player}'s level)^2)+10
		if ({exp::%{_uuid}%::%{_profile}%}+{_exp}) >= {_levelCeiling}:
			set {exp::%{_uuid}%::%{_profile}%} to (({_exp}+{exp::%{_uuid}%::%{_profile}%}) - {_levelCeiling})
			add 1 to {_player}'s level
			add 3 to {statPoints::%{_uuid}%::%{_profile}%}
			send title "&5Leveled Up!" with subtitle "&dYou are now level %{level::%{_uuid}%::%{_profile}%}%" to {_player} for 1 seconds
			play sound "entity.ender_dragon.growl0" with volume 1 to {_player}
			wait 2 second
			send subtitle "&dType /stats to use your &b%{statPoints::%{_uuid}%::%{_profile}%}% &dstat points" to {_player} for 1 seconds
			exit 1 section
		else:
			add {_exp} to {exp::%{_uuid}%::%{_profile}%}
		set metadata tag "interruptActionBar" of {_player} to true
		send action bar "&5+ %{_exp}% EXP" to {_player}
		set {_player}'s level progress to ({exp::%{_uuid}%::%{_profile}%}/{_levelCeiling})
    
command /resetEXP:
	trigger:
		set {_profile} to (metadata tag "profile" of player)
		delete {exp::%player's uuid%::%{_profile}%}
		set {level::%player's uuid%::%{_profile}%} to 1
		send "&5EXP has been reset"
		set player's level to 1
		set player's level progress to 0
