command /genitem [<text>]:
	permission: staff
	trigger:
		if arg-1 is not set:
			message "&2/&aGenItem&b Item Type&2|&bItem Name&2|&bBase Percent&2|&bBase Multiplier&2|&bStat&2|&bStat Values&2|&bLore&2|&bClass&2|&bLevel Requrment"
			message "&2/&aGenItem&b list&2|&bDelete&2|&bReload"
			message "&aUse a | For every new string use a , For More Then 1 Values in A string"
			send formatted "&2EX: <tooltip:Click For Example><suggest command:/genitem Feather|test|1|1|test|1|test|Mage,Archer|1>&a/genitem Feather|test|1|1|test|1|test|Mage,Archer|1"
			stop
		if arg-1 is "list":
			message "&b------------&a[HISTORY]&b------------"
			loop {EnteredItems::*}:
				add 1 to {_number}
				set {_code} to loop-value
				send formatted "<tooltip:Click To View><suggest command:%{_code}%>&2(&a%{_number}%&2)&f %{_code}%"
				message " "
			stop
		if arg-1 is "delete":
			delete {EnteredItems::*}
			stop
		if arg-1 is "reload":
			execute player command "skript reload test"
			stop
		set {_code} to arg-1
		replace all "ยง" with "&" in {_code}
		set {_code::*} to {_code} split at "|"
		loop {_code::*}:
			add 1 to {_number}
			if {_number} is 1:
				set {_check} to loop-value parsed as item
				set {_code} to loop-value
			else if {_number} is 2 or 5 or 7 or 8:
				set {_codemore::*} to loop-value split at ","
				loop {_codemore::*}:
					add 1 to {_number2}
					if {_value} is not set:
						set {_value} to loop-value-2
					else:
						set {_value} to "%{_value}%"" and ""%loop-value-2%"
				set {_code} to "%{_code}%, (""%{_value}%"")"
				delete {_value}
			else if {_number} is 3 or 4 or 6 or 9:
				set {_codemore::*} to loop-value split at ","
				if size of {_codemore::*} > 0:
					loop {_codemore::*}:
						add 1 to {_number2}
						if {_value} is not set:
							set {_value} to loop-value-2
						else:
							set {_value} to "%{_value}% and %loop-value-2%"
					set {_code} to "%{_code}%, (%{_value}%)"
					delete {_value}
			else:
				set {_code} to "%{_code}%, %loop-value%"
			if {_number} is 3 or 4 or 6 or 9:
				if loop-value parsed as number is not a number:
					set {_check2} to true
		if {_number} is not 9:
			message "&4!ERROR!&c Code: Invaild ## of Strings"
			stop
		if {_check} is not a item:
			message "&4!ERROR!&c Code: Invaild Item"
			stop
		set {_codeSave} to {_code} 
		set {_code} to "add itemGenerator(%{_code}%) to {_drops::*}"
		send formatted "<tooltip:Click To View><suggest command:%{_code}%>%{_code}%"
		give player {_Object}
		set {_value} to {EnteredItems::1}
		set {_value1} to {EnteredItems::2}
		set {_value2} to {EnteredItems::3}
		set {_value3} to {EnteredItems::4}
		set {_value4} to {EnteredItems::5}
		set {EnteredItems::5} to {_value3}
		set {EnteredItems::4} to {_value2}
		set {EnteredItems::3} to {_value1}
		set {EnteredItems::2} to {_value}
		set {EnteredItems::1} to {_code}
		delete {EnteredItems::6}

function GivePotion(player: player, pot: text):
	loop 42 times:
		set {_slot2} to loop-value - 1
		set {_Islot} to slot {_slot2} of {_player}
		if {_pot} is "Mana":
			if name of {_Islot} contains "Mana":
				set {_slot} to {_Slot2}
				exit 1 loop
		else:
			if name of {_Islot} contains "Heal":
				set {_slot} to {_Slot2}
				exit 1 loop
	if {_Slot} is set:
		set {_X} to "PotionCount" tag of nbt of {_ISlot}
		if {_pot} is "Mana":
			set {_item} to potion of water breathing named "&bMana Potion:&7 %{_X}+1%" with lore "&b+50 MP &7when used" with nbt "{HideFlags:63}"
			set {_add} to {_X}+1
			add "{PotionCount:%{_add}%}" to nbt of {_item}
			set slot {_Slot} of {_player}'s inventory to {_item}
		else:
			set {_item} to potion of healing named "&cHealing Potion:&7 %{_X}+1%" with lore "&c+50 HP &7when used" with nbt "{HideFlags:63}"
			set {_add} to {_X}+1
			add "{PotionCount:%{_add}%}" to nbt of {_item}
			set slot {_Slot} of {_player}'s inventory to {_item}
	else:
		if {_pot} is "Mana":
			set {_item} to potion of water breathing named "&bMana Potion:&7 1" with lore "&b+50 MP &7when used" with nbt "{HideFlags:63}"
			add "{PotionCount:1}" to nbt of {_item}
			give {_player} {_item}
		else:
			set {_item} to potion of healing named "&cHealing Potion:&7 1" with lore "&c+50 HP &7when used" with nbt "{HideFlags:63}"
			add "{PotionCount:1}" to nbt of {_item}
			give {_player} {_item}



on pickup:
	if name of event-item contains "Heal":
		set {_X} to "PotionCount" tag of nbt of event-item
		set {_add} to {_X}
		loop 42 times:
			set {_slot2} to loop-value - 1
			set {_Islot} to slot {_slot2} of player
			if name of {_Islot} contains "Heal":
				set {_true} to true
				exit loop
		{_true} is true
		cancel event
		set {_X} to "PotionCount" tag of nbt of {_Islot}
		set {_add} to {_add}+{_X}
		set {_item} to potion of healing named "&cHealing Potion:&7 %{_add}%" with lore "&c+50 HP &7when used" with nbt "{HideFlags:63}"
		add "{PotionCount:%{_add}%}" to nbt of {_item}
		set slot {_Slot2} of player's inventory to {_item}
		delete item
	if name of event-item contains "Mana":
		set {_X} to "PotionCount" tag of nbt of event-item
		set {_add} to {_X}
		loop 42 times:
			set {_slot2} to loop-value - 1
			set {_Islot} to slot {_slot2} of player
			if name of {_Islot} contains "Mana":
				set {_true} to true
				exit loop
		{_true} is true
		cancel event
		set {_X} to "PotionCount" tag of nbt of {_Islot}
		set {_add} to {_add}+{_X}
		set {_item} to potion of water breathing named "&bMana Potion:&7 %{_add}%" with lore "&b+50 MP &7when used" with nbt "{HideFlags:63}"
		add "{PotionCount:%{_add}%}" to nbt of {_item}
		set slot {_Slot2} of player's inventory to {_item}
		delete item

command /pot [<text>]:
	permission: staff
	trigger:
		GivePotion(player, "%arg-1%")



command /setteamtp [<text>]:
	permission: staff
	trigger:
		if arg-1 is "Blue":
			set {Blue.Base} to location of player
		else if arg-1 is "Red":
			set {Red.Base} to location of player
		else:
			set {All.Hub} to location of player

command /hub:
	trigger:
		teleport player to {All.Hub}

command /profile:
	trigger:
		if player's world is "Hub":
			profileInv(player, "save")
			wait 1 tick
			set {_uuid} to player's uuid
			set {_player} to player
			set {_profile} to metadata tag "profile" of {_player}
			set {_perm} to uncolored {profiles::%{_uuid}%::%{_profile}%}
			set {_perm} to "nte.%{_perm}%"
			replace " " in {_perm} with ""
			if {_player} has permission "staff":
				set {_perm} to "%{_perm}%.Staff"
			execute console command "lp user %{_player}% permission unset %{_perm}%"
			clear metadata tag "profile" of player
			set {_player} to player
			set {_uuid} to {_player}'s uuid
			set {_profile} to metadata tag "profile" of {_player}
			set {_perm} to uncolored {profiles::%{_uuid}%::%{_profile}%}
			set {_perm} to "nte.%{_perm}%"
			replace " " in {_perm} with ""
			if player has permission "staff":
				set {_perm} to "%{_perm}%.Staff"
			execute console command "lp user %{_player}% permission unset %{_perm}%"
			joinGUI(player)
		else:
			message "&cThis Command Can Only Be Ran In Hub!"

command /armorstand:
	permission: staff
	trigger:
		summon armor stand at player
		set {_armor} to last spawned entity
		add "{ShowArms:1b}" to nbt of {_armor}
		add "{Rotation:0f}" to nbt of {_armor}
		add "{Invulnerable:1b}" to nbt of {_armor}
		set metadata tag "CustomArmorStand" of {_armor} to true
		set metadata tag "CustomArmorStandOwner" of {_armor} to "%player%"
		set metadata tag "CustomArmorStandSelect" of {_armor} to false
		set {_GetParts} to location of {_armor}
		set {_GetPartsChest} to location above {_GetParts}
		set {_GetPartsRightHand} to location .3 meters right of {_GetPartsChest}
		set {_GetPartsLeftHand} to location .3 meters left of {_GetPartsChest}
		set {_GetPartsRightLeg} to location .3 meters right of {_GetParts}
		set {_GetPartsLeftLeg} to location .3 meters left of {_GetParts}
		set {_GetPartsHead} to location above {_GetPartsChest}
		while {_armor} is alive:
			if metadata tag "CustomArmorStandSelect" of {_armor} is true:
				set {_loc.z} to z-coordinate of {_armor}
				set {_loc.y} to y-coordinate of location infront (location infront of player)
				set {_loc.x} to x-coordinate of location infront (location infront of player)
				set {_loc} to location at {_loc.x}, {_loc.y}, {_loc.z} in world "Hilly_Woods"
				if (distance between {_armor} and {_loc}) < 1.5:
					if (distance between {_armor} and player) < 4:
						if 1 is 1:
							set {_spawn} to location 1.3 meters above {_loc}
							set {_d1} to distance between {_spawn} and {_GetPartsChest}
							set {_d2} to distance between {_spawn} and {_GetPartsRightHand}
							set {_d3} to distance between {_spawn} and {_GetPartsLeftHand}
							set {_d4} to distance between {_spawn} and {_GetPartsRightLeg}
							set {_d5} to distance between {_spawn} and {_GetPartsLeftLeg}
							set {_d6} to distance between {_spawn} and {_GetPartsHead}
							set metadata tag "CustomArmorStandSelect" of {_armor} to true
							if {_d6} < .8:
								set {_select} to "Helmet"
							else if {_d1} < .3:
								set {_select} to "Chest"
							else if {_d2} < .5:
								set {_select} to "Right Arm"
							else if {_d3} < .5:
								set {_select} to "Left Arm"
							else if {_d4} < .5:
								set {_select} to "Right Leg"
							else if {_d5} < .5:
								set {_select} to "Left Leg"
							set metadata tag "CustomArmorStandSelected" of {_armor} to "%{_select}%"
							set {_save} to {_select}
							#set {_s} to last spawned entity
							add "{Glowing:1b}" to nbt of {_armor}
							#add "{NoGravity:1b}" to nbt of {_s}
						else:
							set metadata tag "CustomArmorStandSelect" of {_armor} to false
							add "{Glowing:0b}" to nbt of {_armor}
					else:
						set metadata tag "CustomArmorStandSelect" of {_armor} to false
						add "{Glowing:0b}" to nbt of {_armor}
				else:
					set metadata tag "CustomArmorStandSelect" of {_armor} to false
					add "{Glowing:0b}" to nbt of {_armor}
			wait 1 tick
		#kill {_s}

on click:
	stop
	loop all armor stands in radius 3 of player:
		metadata tag "CustomArmorStandOwner" of loop-entity is "%player%"
		add loop-entity to {_e::*}
	set {_e} to {_e::1}
	{_e} is set
	add "{Glowing:0b}" to nbt of {_e}
	cancel event
	set {_l} to location above (location above {_e})
	name of player's tool is "&aArmor Stand Editor"
	if player is not sneaking:
		if metadata tag "CustomArmorStand" of {_e} is true:
			if metadata tag "CustomArmorStandSelect" of {_e} is true:
				metadata tag "CustomArmorStandSelect" of {_e} is true
				set {_select} to metadata tag "CustomArmorStandSelected" of {_e}
				if {_select} is set:
					drawDot count 1, particle "redstone", RGB 255, 0, 0, center {_l}, rainbowMode false, visibleRange 30, pulseDelay 0, keepFor 20 ticks
					message "&aSelected %{_select}%&a!" to player
				set metadata tag "CustomArmorStandSelect" of {_e} to false
				add "{Glowing:0b}" to nbt of {_e}
			else:
				player's target entity is {_e}
				message "&ePlease Select A Part!" to player
				drawDot count 1, particle "redstone", RGB 255, 0, 0, center {_l}, rainbowMode false, visibleRange 30, pulseDelay 0, keepFor 20 ticks
				set metadata tag "CustomArmorStandSelect" of {_e} to true
	else:
		set {_select} to metadata tag "CustomArmorStandSelected" of {_e}
		{_select} is set
		message "&aPlease Type The Directions ([1-360] and [1-360] and [1-360])" to player
		set metadata tag "CustomArmorStandTypePlayerNoTalk" of player to true
		while metadata tag "CustomArmorStandTypePlayerNoTalk" of player is true:
			wait 1 second
		set {_editingvalue} to metadata tag "CustomArmorStandTypePlayerNoTalk" of player
		set {_EditValue::*} to {_editingvalue} split at " and "
		if {_select} is "Helmet":
			add "{Pose:{Head:[%{_EditValue::1}%f, %{_EditValue::2}%f, %{_EditValue::3}%f]}}" to {_e}'s nbt
		if {_select} is "Chest":
			add "{Pose:{Body:[%{_EditValue::1}%f, %{_EditValue::2}%f, %{_EditValue::3}%f]}}" to {_e}'s nbt
		if {_select} is "Right Arm":
			add "{Pose:{RightArm:[%{_EditValue::1}%f, %{_EditValue::2}%f, %{_EditValue::3}%f]}}" to {_e}'s nbt
		if {_select} is "Left Arm":
			add "{Pose:{LeftArm:[%{_EditValue::1}%f, %{_EditValue::2}%f, %{_EditValue::3}%f]}}" to {_e}'s nbt
		if {_select} is "Right Leg":
			add "{Pose:{RightLeg:[%{_EditValue::1}%f, %{_EditValue::2}%f, %{_EditValue::3}%f]}}" to {_e}'s nbt
		if {_select} is "Left Leg":
			add "{Pose:{LeftLeg:[%{_EditValue::1}%f, %{_EditValue::2}%f, %{_EditValue::3}%f]}}" to {_e}'s nbt

on drop:
	if player is not sneaking:
		if event-item is wooden sword named "&aArmor Stand Editor":
			loop all armor stands in radius 3 of player:
				metadata tag "CustomArmorStandOwner" of loop-entity is "%player%"
				add loop-entity to {_e::*}
			set {_e} to {_e::1}
			set {_l} to location above (location above {_e})
			drawDot count 1, particle "redstone", RGB 255, 0, 0, center {_l}, rainbowMode false, visibleRange 30, pulseDelay 0, keepFor 20 ticks
			add "{Glowing:0b}" to nbt of {_e}
			cancel event
			send formatted "&aPlease Type The Rotation [1-360]" to player
			set metadata tag "CustomArmorStandTypePlayerNoTalk" of player to true
			while metadata tag "CustomArmorStandTypePlayerNoTalk" of player is true:
				wait 1 second
			set {_editingvalue} to metadata tag "CustomArmorStandTypePlayerNoTalk" of player
			add "{Rotation:[%{_editingvalue}%f]}" to nbt of {_e}
	else:
		if event-item is wooden sword named "&aArmor Stand Editor":
			cancel event
			execute player command "/armorstand"

command /aarmorstandType [<number>]:
	permission: staff
	trigger:
		if arg-1 is 4:
			set metadata tag "CustomArmorStandTypePlayerNoTalk" of player to true

on chat:
	if metadata tag "CustomArmorStandTypePlayerNoTalk" of player is true:
		set {_message} to message
		set metadata tag "CustomArmorStandTypePlayerNoTalk" of player to {_message}
		set {_editingvalue} to metadata tag "CustomArmorStandTypePlayerNoTalk" of player






on right click on ender chest:
		cancel event
		VaultGui(player)


on right click with ender chest:
		name of event-item is "&6Personal Bank"
		cancel event
		VaultGui(player)


function VaultGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultGUI" of {_player} to chest inventory with 3 rows named "&6Bank"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultGUI" of {_player} to yellow stained glass pane named "&a"
	set slot (integers between 10 and 16) of metadata tag "VaultGUI" of {_player} to light gray stained glass pane named "&a"
	set {_item} to player head named "&6Clan Money Vault" with lore "&7Right Click&a +" and "&7Left Click&c -"
	add "{SkullOwner:{Id:[I;1070520302,1259751651,-1190949035,1321843131],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjdhYWRmZjlkZGM1NDZmZGNlYzZlZDU5MTljYzM5ZGZhOGQwYzA3ZmY0YmM2MTNhMTlmMmU2ZDdmMjU5MyJ9fX0=""}]}}}" to NBT of {_Item}
	set {_item2} to player head named "&6Personal Money Vault" with lore "&7Right Click&a +" and "&7Left Click&c -"
	add "{SkullOwner:{Id:[I;-53074837,-1939846255,-1705548134,871583154],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjljYjNkMTlkYjUyOWEyMTVjZjYyNjk3NTkxY2MxM2ZiOGM3ODZhOGYyN2I3NTI4YzMyYWMyOTg2Yjk2NzBjNCJ9fX0=""}]}}}" to NBT of {_Item2}
	set {_item3} to player head named "&6Personal Item Vault"
	add "{SkullOwner:{Id:[I;441899687,1891713813,-1145002998,2066825560],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNWE3MzZlYjFhN2NlNWE1ZjVkNWIxNjg5MzFmYTMxMzk2Mzg2YzE2MDU2OGI0MTk2NGJhODZjZGI5ZWQ2YmUifX19=""}]}}}" to NBT of {_Item3}
	set {_item2} to player head named "&6Balance" with lore "&6&lโข&e Purse: %moneyComma({balance::%{_uuid}%::%{_profile}%} ? 0)%" and "&6&lโข&e Clan Bank: %moneyComma({VaultBal::%{_uuid}%::%{_profile}%}) ? 0%"
	add "{SkullOwner:{Id:[I;-631208920,-501202084,-1771491357,-1068018600],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZTM2ZTk0ZjZjMzRhMzU0NjVmY2U0YTkwZjJlMjU5NzYzODllYjk3MDlhMTIyNzM1NzRmZjcwZmQ0ZGFhNjg1MiJ9fX0=""}]}}}" to NBT of {_Item2}
	set slot 13 of metadata tag "VaultGUI" of {_player} to {_item}
	set slot 14 of metadata tag "VaultGUI" of {_player} to {_item2}
	set slot 12 of metadata tag "VaultGUI" of {_player} to {_item3}
	open (metadata tag "VaultGUI" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 13:
		if {_clicktype} contains "right":
			VaultGuiAdd({_player})
		else if {_clicktype} contains "left":
			VaultGuiRemove({_player})
	if {_slot} is 12:
		open {_player}'s enderchest to {_player}



on join:
	set {_uuid} to uuid of player
	if {Interest::%{_uuid}%} is false:
		set {Interest::%{_uuid}%} to true
		set {_profile} to metadata tag "profile" of player
		loop 4 times:
			set {_add} to {VaultBal::%{_uuid}%::%loop-value%}*.01
			add {_add} to {VaultBal::%{_uuid}%::%loop-value%}
		wait 20 seconds
		message "&eYou Earned $%moneyComma({VaultBal::%{_uuid}%::%{_profile}%}*.01) ? 0%&e In Interest While You Were Offline!" to player

function VaultGuiAdd(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultGUIAdd" of {_player} to chest inventory with 3 rows named "&6Clain Vault &e$%moneyComma({VaultBal::%{_uuid}%::%{_profile}%}) ? 0% &a+ "
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultGUIAdd" of {_player} to lime stained glass pane named "&a"
	set slot 8 of metadata tag "VaultGUIAdd" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultGUIAdd" of {_player} to lime wool named "&a+ %{_n}%"
		set {_n} to {_n}*10
		if loop-value is 7:
			set {_n} to {balance::%{_uuid}%::%{_profile}%}
			set slot (loop-value+9) of metadata tag "VaultGUIAdd" of {_player} to lime wool named "&a+ %{_n}%" with lore "&7Deposit all your money!"
	open (metadata tag "VaultGUIAdd" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultGuiRemove(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultGUIRemove" of {_player} to chest inventory with 3 rows named "&6Clain Vault &e$%moneyComma({VaultBal::%{_uuid}%::%{_profile}%}) ? 0% &c-"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultGUIRemove" of {_player} to red stained glass pane named "&a"
	set slot 8 of metadata tag "VaultGUIRemove" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultGUIRemove" of {_player} to red wool named "&c- %{_n}%"
		set {_n} to {_n}*10
		if loop-value is 7:
			set {_n} to {VaultBal::%{_uuid}%::%{_profile}%}
			set slot (loop-value+9) of metadata tag "VaultGUIRemove" of {_player} to red wool named "&c- %{_n}%" with lore "&7Withdraw all your money!"
	open (metadata tag "VaultGUIRemove" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultAddGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15:
		set {_name} to slot {_slot} of metadata tag "VaultGUIAdd" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {balance::%{_uuid}%::%{_profile}%} >= {_name}:
			add {_name} to {VaultBal::%{_uuid}%::%{_profile}%}
			remove {_name} from {balance::%{_uuid}%::%{_profile}%}
			VaultGuiAdd({_player})
	if {_slot} is 16:
		add {balance::%{_uuid}%::%{_profile}%} to {VaultBal::%{_uuid}%::%{_profile}%}
		set {balance::%{_uuid}%::%{_profile}%} to 0
		VaultGuiAdd({_player})

function VaultRemoveGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15 or 16:
		set {_name} to slot {_slot} of metadata tag "VaultGUIRemove" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {VaultBal::%{_uuid}%::%{_profile}%} >= {_name}:
			remove {_name} from {VaultBal::%{_uuid}%::%{_profile}%}
			add {_name} to {balance::%{_uuid}%::%{_profile}%}
			VaultGuiRemove({_player})

#
#
#


on pickup:
	set {_player} to player
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	if {profiles::%{_uuid}%::%{_profile}%} is not set:
		cancel event


on drop:
	set {_player} to player
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	if {profiles::%{_uuid}%::%{_profile}%} is not set:
		cancel event

function VaultPGuiAdd(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultPGUIAdd" of {_player} to chest inventory with 3 rows named "&6Personal Vault &e$%moneyComma({VaultPBal::%{_uuid}%::%{_profile}%}) ? 0% &a+ "
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultPGUIAdd" of {_player} to lime stained glass pane named "&a"
	set slot 8 of metadata tag "VaultPGUIAdd" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultPGUIAdd" of {_player} to lime wool named "&a+ %{_n}%"
		set {_n} to {_n}*10
	open (metadata tag "VaultPGUIAdd" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultPGuiRemove(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultPGUIRemove" of {_player} to chest inventory with 3 rows named "&6Personal Vault &e$%moneyComma({VaultPBal::%{_uuid}%::%{_profile}%}) ? 0% &c-"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultPGUIRemove" of {_player} to red stained glass pane named "&a"
	set slot 8 of metadata tag "VaultPGUIRemove" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultPGUIRemove" of {_player} to red wool named "&c- %{_n}%"
		set {_n} to {_n}*10
	open (metadata tag "VaultPGUIRemove" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultPAddGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15 or 16:
		set {_name} to slot {_slot} of metadata tag "VaultPGUIAdd" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {balance::%{_uuid}%::%{_profile}%} >= {_name}:
			add {_name} to {VaultPBal::%{_uuid}%::%{_profile}%}
			remove {_name} from {balance::%{_uuid}%::%{_profile}%}
			VaultPGuiAdd({_player})

function VaultPRemoveGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15 or 16:
		set {_name} to slot {_slot} of metadata tag "VaultPGUIRemove" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {VaultPBal::%{_uuid}%::%{_profile}%} >= {_name}:
			remove {_name} from {VaultPBal::%{_uuid}%::%{_profile}%}
			add {_name} to {balance::%{_uuid}%::%{_profile}%}
			VaultPGuiRemove({_player})

#
#







on pickup:
	player's gamemode is not creative
	name of event-item is not set
	cancel event

on click:
	wait 1 tick
	set player's helmet to player's helmet


on drop:
	player's gamemode is not creative
	name of event-item is not set
	message "&cYou Cannot Drop Gliched Items!" to player
	cancel event

on block break:
	player's gamemode is not creative
	player's world is not "Fun"
	cancel event

command /removearrows [<player>]:
	permission: staff
	trigger:
		remove all of the arrows stuck in arg-1

command /kk [<text>]:
	permission: staff
	trigger:
		set {_stuf::*} to arg-1 split at ": "
		set {_1::*} to {_stuf::2} split at "Lore"
		set {_2::*} to {_stuf::4} split at "Level"
		set {_3::*} to {_stuf::3} split at "Type"
		set {_4::*} to {_stuf::5} split at """"
		if {_4::1} is not set:
			set {_stuf2::*} to arg-1 split at ""
			loop {_stuf2::*}:
				add 1 to {_reee}
				if {_stuf2::%{_reee}%} is "1" or "2" or "3" or "4" or "5" or "6" or "7" or "8" or "9" or "0":
					if {_newlevel} is not set:
						set {_newlevel} to "%loop-value%"
					else:
						set {_newlevel} to "%{_newlevel}%%loop-value%"
		if {_4::1} is not set:
			set {_4::1} to {_newlevel}
		set {_stuff} to "add itemGenerator(%{_2::1}%, (""%{_1::1}%""), (1), (1), (""""), (1), (""%{_3::1}%""), (""""), (%{_4::1}%)) to {_items::*}"
		send formatted "<tooltip:Click To View><suggest command:%{_stuff}%>%{_stuff}%"


command /noooo:
	permission: staff
	trigger:
		SpawnHole(location of player, 4)

function SpawnHole(Location: location, Size: number):
	if {_Location} is set:
		loop blocks in radius {_size} around {_Location}:
			add "%loop-block%" to {_block::*}
			add location of loop-block to {_blockloc::*}
			set {_nbt} to nbt of loop-block
		loop {_block::*}:
			add 1 to {_loop}
			loop-value is not "air"
			set block at {_blockloc::%{_loop}%} to barrier
		wait 5 seconds
		loop {_block::*}:
			add 1 to {_loop2}
			set {_block} to loop-value
			set {_block} to {_block} parsed as item
			{_block} is not air or barrier
			block at {_blockloc::%{_loop2}%} is barrier
			set block at {_blockloc::%{_loop2}%} to {_block}




command /ServerStats:
	trigger:
		message ""
		message "&6%player%&6:"
		message "&6 Play Time: %difference between now and {TimePlayed::%player's uuid%} ? ""Unknown""%"
		message "&6 Joined: %{TimePlayed::%player's uuid%} ? ""Unknown""%"
		message "&6Server&6:"
		message "&6 Total Unique Joins: %size of all offline players%"
		message "&6 Total Joins: %{totaljoins} ? 0%"

command /Ping:
	trigger:
		message "%player's ping% ms"


command /walkspeed [<number>]:
	permission: staff
	trigger:
		if arg-1 is not set:
			message "%player's walk speed% [%(player's walk speed*10/3)^3%]"
		else:
			set the player's walk speed to arg-1

function RGB(r:integer,g:integer,b:integer) :: string:
    set {a::*} to "&0","&1","&2","&3","&4","&5","&6","&7","&8","&9","&a","&b","&c","&d","&e" and "&f"
    set {_r::*} to {_r},{_g} and {_b}
    loop {_r::*}:
        set {_st} to join {_st},{a::%((loop-value-mod(loop-value,16))/16+1)%} and {a::%mod(loop-value,16)+1%} with ""
    return "&x%{_st}%"

command /colordmg [<text>]:
	permission: staff
	trigger:
		set {_rand} to "false"
		broadcast "%Rainbow(arg-1, {_rand}) ? ""&cError""%"

command /createNPC <text>:
	trigger:
		spawn villager at player
		set {_npc} to last spawned villager
		add "{Invulnerable:1b}" to nbt of {_npc}
		add "{Attributes:[{Name:generic.movement_speed,Base:0}]}" to nbt of {_npc}
		set display name of {_npc} to "&9&l%arg-1%"

function Rainbow(Rainbow.Word: text, R: text) :: string:
	if {_Rainbow.Word} is set:
		set {_text::*} to {_Rainbow.Word} split at ""
		if {_R} is "false":
			set {_red} to 255
			set {_green} to 0
			set {_blue} to 0
		else:
			set {_red} to 255
			set {_green} to 0
			set {_blue} to 0
			set {_RX} to random integer between 1 and 5
		if {_RX} is not set:
			set {_RX} to 5
		set {_check1} to false
		set {_check2} to false
		set {_check3} to false
		loop {_text::*}:
			add 1 to {_test}
			if {_red} is 255:
				set {_check1} to true
			if {_green} is 255:
				set {_check2} to true
			if {_blue} is 255:
				set {_check3} to true
			if {_check1} is true:
				{_check2} is false
				remove {_RX} from {_red}
				add {_RX} to {_green}
			if {_check2} is true:
				{_check3} is false
				remove {_RX} from {_green}
				add {_RX} to {_blue}
			if {_check3} is true:
				remove {_RX} from {_blue}
				add {_RX} to {_red}
			if {_blue} and {_green} is 0:
				{_red} is 255
				set {_check1} to false
				set {_check2} to false
				set {_check3} to false
			set {_save2} to "R %{_red}% G %{_green}% B %{_blue}%"
			if {_save} is {_save2}:
				set {_RX} to random integer between 1 and 5
			set {_save} to {_save2}
			if {_red} > 255:
				set {_red} to 255
			if {_red} < 0:
				set {_red} to 0
			if {_green} > 255:
				set {_green} to 255
			if {_green} < 0:
				set {_green} to 0
			if {_blue} > 255:
				set {_blue} to 255
			if {_blue} < 0:
				set {_blue} to 0

			set {_text::%{_test}%} to colored "%RGB({_red}, {_green}, {_blue})%%{_text::%{_test}%}%"
			if {_msgtext} is set:
				set {_msgtext} to colored "%{_msgtext}%%{_text::%{_test}%}%"
			else:
				set {_msgtext} to colored {_text::%{_test}%}
		return colored {_msgtext}


function speedStat(player: player) :: number:
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_x} to ({_player}'s walk speed*10/3)^3.825
	if {_x} > 100:
		set {_x} to 100
	return ({_x})



on first join:
	set {TimePlayed::%player's uuid%} to now

on join:
	wait 1 tick
	add 1 to {totaljoins}
	{TimePlayed::%player's uuid%} is not set
	set {TimePlayed::%player's uuid%} to now




command /k:
	trigger:
		loop 20 times:
			wait 1 tick
			BlockFire(player, fire)


on death:
	DeathFake(player)



function DeathFake(player: player):
	if {_player} is set:
		summon falling stone brick wall at {_player}
		add "{NoGravity:1b}" to nbt of last spawned entity
		add "{CustomNameVisible:1b}" to nbt of last spawned entity
		add "{DropItem:0b}" to nbt of last spawned entity
		add "{Time:1}" to nbt of last spawned entity
		set last spawned entity's display name to "&a%{_player}%&a's Grave"
		set {_sizefalling} to last spawned entity
		set {_time} to 30
		while {_time} > -1:
			set display name of {_sizefalling} to "&a%{_player}%&a's Grave &6[&e%{_time}%&6]"
			add "{Time:1}" to nbt of {_sizefalling}
			remove 1 from {_time}
			wait 1 second
		set display name of {_sizefalling} to "&a%{_player}%&a's Grave &6[&e0&6]"
		wait 1 second
		kill {_grave}
		kill {_sizefalling}






function BlockFire(player: player, Block: item):
	if {_player} is set:
		set {_x} to x-coordinate of {_player}
		set {_y} to y-coordinate of {_player}
		set {_z} to z-coordinate of {_player}
		set {_loc} to location({_x}, {_y}-1, {_z}, world "Hilly_Woods")
		if {_block} is air:
			set {_block} to grass block
		set {_loc} to location({_x}, {_y}+1.1, {_z}, world "Hilly_Woods")
		set {_block} to "falling %{_block}%" parsed as entitytype
		summon {_block} at location infront of (location above (location infront of {_player}))
		set {_spawn} to last spawned entity
		add "{Rotation:[%{_player}'s yaw%F,%{_player}'s pitch-5%F]}" to nbt of {_spawn}
		add "{Time:1}" to nbt of {_spawn}
		add "{NoGravity:1b}" to nbt of {_spawn}
		add "{DropItem:0b}" to nbt of {_spawn}
		push {_spawn} forwards at speed 1.5
		wait 1 tick
		while {_spawn} is alive: 
			loop blocks in radius 1.1 of {_spawn}:
				if loop-block != air:
					exit 2 loops
			loop players in radius 2.5 of {_spawn}:
				loop-player is not {_player}
				damage loop-player by 7

			wait 1 tick
			add 1 to {_timer}
			push {_spawn} down with speed .05
			if {_timer} is 100:
				kill {_spawn}
		create a fake explosion at location of {_spawn}
		kill {_spawn}
		loop all players in radius 3 of {_spawn}:
			loop-player is not {_player}
			damage loop-player by 5


#on block physics:
#	cancel event





on inventory click:
	if player's current inventory is (metadata tag "SellGUI" of player):
		loop 53 times:
			set {_showslot} to slot loop-value of metadata tag "SellGUI" of player
			{_showslot} is not yellow stained glass pane named "&a"
			{_showslot} is not hopper
			{_showslot} is not compass
			{_showslot} is not potion
			{_showslot} is not iron chestplate
			{_showslot} is not ender chest
			{_showslot} is not anvil
			{_showslot} is not air
			{_showslot} is not sunflower
			event-slot is 9 or 18 or 27 or 36 or 45
			"%event-inventory%" contains "<none>"
			cancel event
			stop
	set {_Timer} to difference between {Shop.Timer} and now
	if event-inventory = (metadata tag "SellGUI" of player):
		SellGUIIndexSlot(player, index of event-slot)
		if event-slot is (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52 or 53):
			cancel event
		set slot 8 of metadata tag "SellGUI" of player to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	if event-inventory = (metadata tag "MusicGUI" of player):
		MusicGUIIndexSlot(player, index of event-slot, click type)
	if event-inventory = (metadata tag "VaultGUI" of player):
		VaultGUIIndexSlot(player, index of event-slot, click type)
	if event-inventory = (metadata tag "VaultGUIAdd" of player):
		VaultAddGUIIndexSlot(player, index of event-slot, click type)
	if event-inventory = (metadata tag "VaultGUIRemove" of player):
		VaultRemoveGUIIndexSlot(player, index of event-slot, click type)
#
	if event-inventory = (metadata tag "VaultPGUIAdd" of player):
		VaultPAddGUIIndexSlot(player, index of event-slot, click type)
	if event-inventory = (metadata tag "VaultPGUIRemove" of player):
		VaultPRemoveGUIIndexSlot(player, index of event-slot, click type)
	if event-inventory = (metadata tag "SkillShopGui" of player):
		SkillShopGUIIndexSlot(player, index of event-slot)
		set slot 8 of metadata tag "SkillShopGui" of player to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	if event-inventory = (metadata tag "SkillShopGearGui" of player):
		SkillShopGearGUIIndexSlot(player, index of event-slot)
		set slot 8 of metadata tag "SkillShopGearGui" of player to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	if event-inventory = (metadata tag "SkillShopPotionGui" of player):
		SkillShopPotionGUIIndexSlot(player, index of event-slot)
		set slot 8 of metadata tag "SkillShopPotionGui" of player to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	if event-inventory = (metadata tag "SkillShopMiscGui" of player):
		SkillShopMiscGUIIndexSlot(player, index of event-slot)
		set slot 8 of metadata tag "SkillShopMiscGui" of player to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"


on inventory open:
	wait 1 tick
	while player's current inventory is (metadata tag "SkillShopMiscGui" of player) or (metadata tag "SkillShopPotionGui" of player) or (metadata tag "SkillShopGearGui" of player) or (metadata tag "SkillShopGui" of player) or (metadata tag "SellGUI" of player):
		set {_Timer} to difference between {Shop.Timer} and now
		set {_Timer2} to "%{_Timer}%"
		set {_Timer2::*} to {_Timer2} split at "."
		set {_Timer2} to "%{_Timer2::1}% seconds"
		set slot 8 of player's current inventory to compass named "&eShop Reload Timer:" with lore "&e%{_Timer2} ? ""Unknown""%" and "&8[Click To Update]"
		wait 1 second








command /TestDmg:
	trigger:
		set {_tool} to player's tool
		add "Attack" tag of nbt of player's tool to {_Attack::*}
		broadcast "%{_attack::*}%"
		add "{Attack:1}" to nbt of {_tool}
		give player {_tool}



command /Enhancments:
	trigger:
		message "%Enhancments(player's held item)%"

command /Enhancmentsset [<number>]:
	trigger:
		set {_number} to arg-1
		give player EnhancmentsSet(player's held item, {_number}, player)



function CoinRed(entity: item):
	wait 5 ticks
	set display name of {_item} to "&4[&cRed&4]&e&l Gold Coin"

function CoinBlue(entity: item):
	wait 5 ticks
	set display name of {_item} to "&1[&9Blue&1]&e&l Gold Coin"


function Enhancments(item: item) :: number:
	if {_item} is set:
		set {_lorelines::*} to name of {_item} split at ""
		set {_line} to size of {_lorelines::*}
		loop {_line} times:
			if {_lorelines::%loop-value%} is "โฆฟ":
				add 1 to {_Jems}
		return {_Jems}

function EnhancmentsSet(item: item,Enhancment: integer,player: Player) :: item:
	if {_item} is set:
		if item amount of {_item} > 1:
			stop
		set {_name::*} to name of {_item} split at ""
		set {_size} to size of {_name::*}
		set {_alllore::*} to {_item}'s lore
		set {_loresize} to size of {_alllore::*}
		set {_saveold} to Enhancments({_item})
		if {_saveold} is not set:
			set {_saveold} to 0
		set {_diference} to (difference between {_saveold} and {_Enhancment})
		loop {_size} times:
			{_name::%loop-value%} is not "โฆฟ"
			if {_name} is not set:
				set {_name} to "%{_name::%loop-value%}%"
			else:
				set {_name} to "%{_name}%%{_name::%loop-value%}%"
		loop {_Enhancment} times:
			if {_jem} is not set:
				set {_jem} to "โฆฟ"
			else:
				set {_jem} to "%{_jem}%โฆฟ"
		set name of {_item} to "%{_name}%&b%{_jem}%"
		set {_lore::*} to line 2 of {_item}'s lore split at "+"
		set {_ExtraValue} to Enhancments({_item})*5
		set line 2 of {_item}'s lore to "%{_lore::1}%&6+(%{_ExtraValue}%&6)"
		set {_lore::*} to line 3 of {_item}'s lore split at "+"
		set line 3 of {_item}'s lore to "%{_lore::1}%&6+(%{_ExtraValue}%&6)"
		set {_line1::*} to line 3 of {_item}'s lore split at " "
		set {_line2::*} to line 2 of {_item}'s lore split at " "
		set {_linexx1::*} to {_line1::4} split at " "
		set {_linexx2::*} to {_line2::2} split at " "
		set {_linexx1::1} to {_linexx1::1} parsed as number
		set {_linexx2::1} to {_linexx2::1} parsed as number
		set {_linez1::*} to {_line1::2} split at "%%"
		set {_linez2::*} to {_line2::5} split at "%%"
		set {_linez2::1} to {_linez2::1} parsed as number
		set {_linez1::1} to {_linez1::1} parsed as number
		set {_ExtraValue} to {_ExtraValue} parsed as number
		set {_valuetoadd1} to ({_linexx2::1}+{_ExtraValue})
		set {_valuetoadd2} to ({_linexx1::1}+{_ExtraValue})
		add "{%{_line2::3}%:%{_valuetoadd1}%}" to {_item}'s nbt
		add "{%{_line1::5}%:%{_valuetoadd2}%}" to {_item}'s nbt
		loop {_diference} times:
			set {_PickPrice} to "Price" tag of nbt of {_Item}
			set {_PickPrice} to {_PickPrice}*(1+(1/10))
			add "{Price:%{_PickPrice}%}" to {_item}'s nbt
		set {_PickPrice} to "Price" tag of nbt of {_Item}
		set line ({_loresize}-1) of {_item}'s lore to "&6โ &e %{_PickPrice}%"
		if {_diference} > 0:
			if {_diference} > 1:
				message "&dSuccessfully Put &5%{_diference}%&d Enhancements on your item" to {_player}
			else:
				message "&dSuccessfully Put &5%{_diference}%&d Enhancement on your item" to {_player}
		return {_item}

	

on inventory click:
	cursor slot of player is Purple glazed terracotta
	set {_i} to Enhancments(event-slot)
	event-slot is not air
	event-slot is armor or sword or bow or stick or sunflower or axe or shovel
	name of event-slot is set
	cancel event
	if item amount of event-item > 1:
		message "&cEnhancments Can Only Be Put On 1 Item!"
		stop
	if {_i} is more than 4:
		set event-slot to EnhancmentsSet(event-item, 5, player)
		stop
	set {_add} to Enhancments(event-item)
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 I":
		add 1 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 II":
		add 2 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 III":
		add 3 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 IV":
		add 4 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 V":
		add 5 to {_add}
	if {_add} > 5:
		set {_add} to 5
	remove 1 of player's cursor slot from player's cursor slot
	set event-slot to EnhancmentsSet(event-item, {_add}, player)

function moneyComma(n: object) :: text:
    if "%{_n}%" contains ".":
        set {_s::*} to split "%{_n}%" at "."
        set {_n} to "%a({_s::1})%.%last 2 characters of {_s::2}%"
        return "%{_n}%"
    else:
        set {_n} to a("%{_n}%")
        return "%{_n} ? 0%"
function a(b: text) :: text:
    if length of {_b} > 3:
        return "%a(first length of {_b} - 3 characters of {_b})%,%last 3 characters of {_b}%"
    return {_b}


command /TESTD:
	trigger:
		summon bee
		set {_mob} to last spawned entity
		add "{NoGravity:1b}" to nbt of {_mob}
		set {_disguise} to new disguise with type Squid with username "BEE"
		set disguise of {_mob} to {_disguise}
		while {_mob} is alive:
			wait 1 tick
			set display name of {_mob} to "&cMissile"
			make {_mob} pathfind to player with speed 2
			if distance between {_mob} and player < 3:
				loop 5 times:
					make {_mob} damage player by 15
					create a fake explosion at location of player
					drawRings particle "explosionhuge", center location of player, id "uuid of {_mob}", rainbowMode true, randomRotation true, animated true, radius 1, ringCount 1, ringDensity 3, visibleRange 32, pulseDelay 1
					make {_mob} pathfind to player with speed 5
					wait 10 ticks
				stopEffect id uuid of {_mob}
				kill {_mob}



command /Ai:
	trigger:
		summon phantom at player
		set {_z} to last spawned mob
		add "{Attributes:[{Name:generic.movement_speed,Base:10}]}" to nbt of {_z}




on pickup:
	if metadata tag "SellGUI" of player is set:
		cancel event

on inventory close:
	wait 1 tick
	if metadata tag "SellGUI" of player is set:
		name of player's current inventory is not "&6Shop - Sell"
		set metadata tag "SellGUI2" of player to metadata tag "SellGUI" of player
		clear metadata tag "SellGUI" of player
		wait 5 ticks
		loop 53 times:
			set {_showslot} to slot loop-value of metadata tag "SellGUI2" of player
			{_showslot} is not yellow stained glass pane named "&a"
			{_showslot} is not hopper
			{_showslot} is not compass
			{_showslot} is not air
			if name of {_showslot} contains "Skills" or "Gear" or "Potions" or "Misc" or "Sell":
			else:
				if player has enough space for {_showslot}:
					give player {_showslot}
				else:
					drop {_showslot} at player
		clear metadata tag "SellGUI2" of player


command /Testgui1:
	trigger:
		if metadata tag "SellGUI" of player is set:
			broadcast "yes"
		else:
			broadcast "no"



command /Sell:
	trigger:
		message "&6Please Use The Shop To Sell Items!"


on right click with jukebox:
	name of tool of player is "&3[&bJukebox&3]"
	cancel event
	MusicGui(player)


function MusicGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "MusicGUI" of {_player} to chest inventory with 3 rows named "&aJukebox"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "MusicGUI" of {_player} to stained glass pane named "&a"
	set slot 22 of metadata tag "MusicGUI" of {_player} to Jukebox named "&aJukebox" with lore "&cClick To Stop Song"
	set slot 10 of metadata tag "MusicGUI" of {_player} to music disc strad named "&cCredits" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	set slot 11 of metadata tag "MusicGUI" of {_player} to music disc far named "&cBasalt Delta" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	set slot 12 of metadata tag "MusicGUI" of {_player} to music disc 11 named "&cSoul Sand" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	set slot 13 of metadata tag "MusicGUI" of {_player} to music disc mellohi named "&cDragon" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	set slot 14 of metadata tag "MusicGUI" of {_player} to music disc cat named "&cMenu" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	set slot 15 of metadata tag "MusicGUI" of {_player} to music disc chirp named "&cCrimson Forest" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	set slot 16 of metadata tag "MusicGUI" of {_player} to music disc wait named "&cUnder Water" with lore "&aClick To Play Song" and "&aMiddle Click To Play Song With Pitch 2"
	open (metadata tag "MusicGUI" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function MusicGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 22:
		stop sound "music.credits" and "music.nether.basalt_deltas" and "music.nether.soul_sand_valley" and "music.dragon" and "music.menu" and "music.nether.nether_wastes" and "music.under_water" for {_player}
	if {_slot} is 10:
		if {_clicktype} contains "middle":
			play sound "music.credits" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.credits" with volume 2 to {_player}
	if {_slot} is 11:
		if {_clicktype} contains "middle":
			play sound "music.nether.basalt_deltas" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.nether.basalt_deltas" with volume 2 to {_player}
	if {_slot} is 12:
		if {_clicktype} contains "middle":
			play sound "music.nether.soul_sand_valley" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.nether.soul_sand_valley" with volume 2 to {_player}
	if {_slot} is 13:
		if {_clicktype} contains "middle":
			play sound "music.dragon" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.dragon" with volume 2 to {_player}
	if {_slot} is 14:
		if {_clicktype} contains "middle":
			play sound "music.menu" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.menu" with volume 2 to {_player}
	if {_slot} is 15:
		if {_clicktype} contains "middle":
			play sound "music.nether.nether_wastes" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.nether.nether_wastes" with volume 2 to {_player}
	if {_slot} is 16:
		if {_clicktype} contains "middle":
			play sound "music.under_water" with volume 2 and pitch 2 to {_player}
		else:
			play sound "music.under_water" with volume 2 to {_player}







function SellGui(player: player):
	clear metadata tag "SellGUI" of {_player}
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set {_Timer} to difference between {Shop.Timer} and now
	set metadata tag "SellGUI" of {_player} to chest inventory with 6 rows named "&6Shop - Sell"
	set slot ((integers between 0 and 9), 17, 18, 26, 27, 35, 36, 44 and (integers between 45 and 53)) of metadata tag "SellGUI" of {_player} to yellow stained glass pane named "&a"
	set slot 8 of metadata tag "SellGUI" of {_player} to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	set slot 4 of metadata tag "SellGUI" of {_player} to hopper named "&eSell: $%{_itemValues} ? 0%" with lore "&aClick To Sell 0 Items!"
	set slot 9 of metadata tag "SellGUI" of {_player} to anvil named "&9Skills"
	set slot 18 of metadata tag "SellGUI" of {_player} to iron chestplate named "&9Gear"
	set slot 27 of metadata tag "SellGUI" of {_player} to Potion named "&9Potions"
	set slot 36 of metadata tag "SellGUI" of {_player} to ender chest named "&9Misc"
	set slot 45 of metadata tag "SellGUI" of {_player} to sunflower named "&9Sell"
	open (metadata tag "SellGUI" of {_player}) to {_player}
	#set metadata tag "inventoryOpened" of {_player} to true
	while metadata tag "SellGUI" of {_player} is set:
		wait 20 ticks
		delete {_NumberOfSells}
		loop 53 times:
			delete {_AddPrice}
			set {_showslot} to slot loop-value of metadata tag "SellGUI" of {_player}
			{_showslot} is not yellow stained glass pane named "&a"
			{_showslot} is not hopper
			{_showslot} is not air
			add "Price" tag of nbt of {_showslot} to {_AddPrice}
			if {_showslot} is enchanted book:
				"Price" tag of nbt of {_showslot} is not 0
				set {_tier} to "%uncolored 1st line of the lore of {_showslot}%"
				if {_tier} is "Tier: I":
					add 100 to {_AddPrice}
				if {_tier} is "Tier: II":
					add 300 to {_AddPrice}
				if {_tier} is "Tier: III":
					add 500 to {_AddPrice}
				if {_tier} is "Tier: IV":
					add 750 to {_AddPrice}
				if {_tier} is "Tier: V":
					add 1000 to {_AddPrice}
			if {_showslot} is potion:
				set {_amount::*} to (split "%{_showslot}'s name%" by " ")
				set {_amount::3} to uncolored "%{_amount::3}%" parsed as an integer
				add {_amount::3}*25 to {_AddPrice}
				add {_amount::3}-1 to {_NumberOfSells}
			if {_showslot} is set:
				set {_item} to {_showslot}
				set {_name} to name of {_item}
				set {_lore::*} to lore of {_item}
				set {_heal::*} to {_lore::1} split at "+"
				set {_heal} to {_heal::2}
				set {_heal::*} to {_heal} split at " "
				set {_heal} to {_heal::1}
				set {_heal} to {_heal} parsed as number
				if {_heal} is "โ":
					set {_heal} to "INF"
				if {_heal} is "INF":
					set {_heal} to 5000
				set {_heal} to {_heal}*2
				add {_heal} to {_AddPrice}
			if {_showslot} is spawn egg:
				add 2500 to {_AddPrice}
			if "BackPackLevel" tag of nbt of {_showslot} is set:
				set {_id} to "BackPackId" tag of nbt of {_showslot}
				set {_loopze} to "BackPackLevel" tag of nbt of {_showslot}
				set {_loopze} to {_loopze}*9
				set {_bagcount} to -1
				loop {_loopze} times:
					add 1 to {_bagcount}
					set {_bagitem} to {BackPack::%{_id}%::%{_bagcount}%}
					add "Price" tag of nbt of {_bagitem} to {_AddPrice}
					if {_bagitem} is enchanted book:
						"Price" tag of nbt of {_bagitem} is not 0
						set {_tier} to "%uncolored 1st line of the lore of {_bagitem}%"
						if {_tier} is "Tier: I":
							add 100 to {_AddPrice}
						if {_tier} is "Tier: II":
							add 300 to {_AddPrice}
						if {_tier} is "Tier: III":
							add 500 to {_AddPrice}
						if {_tier} is "Tier: IV":
							add 750 to {_AddPrice}
						if {_tier} is "Tier: V":
							add 1000 to {_AddPrice}
					if {_bagitem} is potion:
						set {_amount::*} to (split "%{_bagitem}'s name%" by " ")
						set {_amount::3} to uncolored "%{_amount::3}%" parsed as an integer
						add {_amount::3}*25 to {_AddPrice}
						add {_amount::3}-1 to {_NumberOfSells}
					if {_bagitem} is spawn egg:
						add 2500 to {_AddPrice}
					set {_AddPrice} to {_AddPrice}*item amount of {_bagitem}
			else:
				set {_AddPrice} to {_AddPrice}*item amount of {_showslot}
			if name of {_showslot} contains "Skills" or "Gear" or "Potions" or "Misc" or "Sell":
			else:
				add item amount of {_showslot} to {_NumberOfSells}
				add {_AddPrice} to {_itemValues}
		if {_NumberOfSells} is not 1:
			set slot 4 of metadata tag "SellGUI" of {_player} to hopper named "&eSell: $%moneyComma({_itemValues}) ? 0%" with lore "&aClick To Sell %moneyComma({_NumberOfSells}) ? 0% Items!"
		else:
			set slot 4 of metadata tag "SellGUI" of {_player} to hopper named "&eSell: $%moneyComma({_itemValues}) ? 0%" with lore "&aClick To Sell %moneyComma({_NumberOfSells}) ? 0% Item!"
		delete {_itemValues}


on inventory click:
	if metadata tag "SellGUI" of player is set:
		if name of event-item contains "Starter":
			cancel event
			message "&cYou can't sell starter weapons!"
		if "Price" tag of nbt of event-item is 0:
			event-item is enchanted book
			cancel event
			message "&cYou can't sell starter skills!"


function SellGUIIndexSlot(player: player, slot: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	if {_slot} is (0, 1, 2, 3, 5, 6, 7, 8, 17, 26, 35, 44, 46, 47, 48, 49, 50, 51, 52 or 53):
		stop
	else:
		wait 1 tick
		delete {_NumberOfSells}
		loop 53 times:
			delete {_AddPrice}
			set {_showslot} to slot loop-value of metadata tag "SellGUI" of {_player}
			{_showslot} is not yellow stained glass pane named "&a"
			{_showslot} is not hopper
			{_showslot} is not air
			add "Price" tag of nbt of {_showslot} to {_AddPrice}
			if {_showslot} is enchanted book:
				"Price" tag of nbt of {_showslot} is not 0
				set {_tier} to "%uncolored 1st line of the lore of {_showslot}%"
				if {_tier} is "Tier: I":
					add 100 to {_AddPrice}
				if {_tier} is "Tier: II":
					add 300 to {_AddPrice}
				if {_tier} is "Tier: III":
					add 500 to {_AddPrice}
				if {_tier} is "Tier: IV":
					add 750 to {_AddPrice}
				if {_tier} is "Tier: V":
					add 1000 to {_AddPrice}
			if {_showslot} is potion:
				set {_amount::*} to (split "%{_showslot}'s name%" by " ")
				set {_amount::3} to uncolored "%{_amount::3}%" parsed as an integer
				add {_amount::3}*25 to {_AddPrice}
				add {_amount::3}-1 to {_NumberOfSells}
			if {_showslot} is set:
				set {_item} to {_showslot}
				set {_name} to name of {_item}
				set {_lore::*} to lore of {_item}
				set {_heal::*} to {_lore::1} split at "+"
				set {_heal} to {_heal::2}
				set {_heal::*} to {_heal} split at " "
				set {_heal} to {_heal::1}
				set {_heal} to {_heal} parsed as number
				if {_heal} is "โ":
					set {_heal} to "INF"
				if {_heal} is "INF":
					set {_heal} to 5000
				set {_heal} to {_heal}*2
				add {_heal} to {_AddPrice}
			if {_showslot} is spawn egg:
				add 2500 to {_AddPrice}
			if "BackPackLevel" tag of nbt of {_showslot} is set:
				set {_id} to "BackPackId" tag of nbt of {_showslot}
				set {_loopze} to "BackPackLevel" tag of nbt of {_showslot}
				set {_loopze} to {_loopze}*9
				set {_bagcount} to -1
				loop {_loopze} times:
					add 1 to {_bagcount}
					set {_bagitem} to {BackPack::%{_id}%::%{_bagcount}%}
					add "Price" tag of nbt of {_bagitem} to {_AddPrice}
					if {_bagitem} is enchanted book:
						"Price" tag of nbt of {_bagitem} is not 0
						set {_tier} to "%uncolored 1st line of the lore of {_bagitem}%"
						if {_tier} is "Tier: I":
							add 100 to {_AddPrice}
						if {_tier} is "Tier: II":
							add 300 to {_AddPrice}
						if {_tier} is "Tier: III":
							add 500 to {_AddPrice}
						if {_tier} is "Tier: IV":
							add 750 to {_AddPrice}
						if {_tier} is "Tier: V":
							add 1000 to {_AddPrice}
					if {_bagitem} is potion:
						set {_amount::*} to (split "%{_bagitem}'s name%" by " ")
						set {_amount::3} to uncolored "%{_amount::3}%" parsed as an integer
						add {_amount::3}*25 to {_AddPrice}
						add {_amount::3}-1 to {_NumberOfSells}
					if {_bagitem} is spawn egg:
						add 2500 to {_AddPrice}
					set {_AddPrice} to {_AddPrice}*item amount of {_bagitem}
					if {_slot} is 4:
						delete {BackPack::%{_id}%::%{_bagcount}%}
			else:
				set {_AddPrice} to {_AddPrice}*item amount of {_showslot}
			if name of {_showslot} contains "Skills" or "Gear" or "Potions" or "Misc" or "Sell":
			else:
				add item amount of {_showslot} to {_NumberOfSells}
				add {_AddPrice} to {_itemValues}
		wait 1 tick
		set slot 4 of metadata tag "SellGUI" of {_player} to hopper named "&eSell: $%moneyComma({_itemValues}) ? 0%" with lore "&aClick To Sell %moneyComma({_NumberOfSells}) ? 0% Items!"
		if {_slot} is 4:
			if {_NumberOfSells} is not 1:
				message "&eSold %moneyComma({_NumberOfSells}) ? 0%&e Items For $%moneyComma({_itemValues}) ? 0%&e!" to {_player}
			else:
				message "&eSold %moneyComma({_NumberOfSells}) ? 0%&e Item For $%moneyComma({_itemValues}) ? 0%&e!" to {_player}
			set {Balance::%{_uuid}%::%{_profile}%} to {Balance::%{_uuid}%::%{_profile}%}+{_itemValues}
			delete {_itemValues}
			loop 53 times:
				delete {_bagid}
				set {_bagid} to "BackPackLevel" tag of nbt of slot loop-value of metadata tag "SellGUI" of {_player}
				{_bagid} is set
				give {_player} slot loop-value of metadata tag "SellGUI" of {_player}
			clear metadata tag "SellGUI" of {_player}
			SellGui({_player})
		set slot 4 of metadata tag "SellGUI" of {_player} to hopper named "&eSell: $%moneyComma({_itemValues}) ? 0%" with lore "&aClick To Sell %moneyComma({_NumberOfSells}) ? 0% Items!"
	if {_slot} is 9:
		SkillShopGui({_player})
	if {_slot} is 18:
		SkillShopGearGui({_player})
	if {_slot} is 27:
		SkillShopPotionGui({_player})
	if {_slot} is 36:
		SkillShopMiscGui({_player})
	if {_slot} is 45:
		SellGui({_player})



on pickup:
	set player's helmet to player's helmet


function SkillShopGUIIndexSlot(player: player, slot: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_item} to slot {_slot} of metadata tag "SkillShopGui" of {_player}
	{_item} is not yellow stained glass pane
	set {_lore} to 1st line of lore of {_item}
	set {_lore::*} to uncolored lore of {_item}
	loop {_lore::*}:
		add 1 to {_lorelines}
	delete line {_lorelines} of lore of {_item}
	if "%uncolored {_lore}%" is "Tier: I":
		set {_Tier} to 500
	if "%uncolored {_lore}%" is "Tier: II":
		set {_Tier} to 3000
	if "%uncolored {_lore}%" is "Tier: III":
		set {_Tier} to 10000
	if {Balance::%{_uuid}%::%{_profile}%} >= {_Tier}:
		remove {_Tier} from {Balance::%{_uuid}%::%{_profile}%}
		message "&ePurchased %name of {_item}%&e For %{_Tier}%&e Coins!" to {_player}
		give {_player} {_item}
	else:
		{_Tier} is set
		message "&cYou Need %moneyComma({_Tier})%&c Coins To Buy This!" to {_player}
	if {_slot} is 9:
		SkillShopGui({_player})
	if {_slot} is 18:
		SkillShopGearGui({_player})
	if {_slot} is 27:
		SkillShopPotionGui({_player})
	if {_slot} is 36:
		SkillShopMiscGui({_player})
	if {_slot} is 45:
		SellGui({_player})


function SkillShopGearGUIIndexSlot(player: player, slot: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_item} to slot {_slot} of metadata tag "SkillShopGearGui" of {_player}
	{_item} is not yellow stained glass pane
	{_item} is not compass
	set {_lore::*} to uncolored lore of {_item}
	loop {_lore::*}:
		add 1 to {_lorelines}
	set {_lore} to line {_lorelines} of lore of {_item}
	delete line {_lorelines} of lore of {_item}
	set {_GetSellPrice::*} to uncolored {_lore} split at ""
	replace all "," with "" in {_GetSellPrice::*}
	replace all " " with "" in {_GetSellPrice::*}
	replace all "Price: " with "" in {_GetSellPrice::*}
	replace all "P" with "" in {_GetSellPrice::*}
	replace all "r" with "" in {_GetSellPrice::*}
	replace all "i" with "" in {_GetSellPrice::*}
	replace all "c" with "" in {_GetSellPrice::*}
	replace all "e" with "" in {_GetSellPrice::*}
	replace all ":" with "" in {_GetSellPrice::*}
	replace all "$" with "" in {_GetSellPrice::*}
	loop {_GetSellPrice::*}:
		if {_Tier} is set:
			set {_Tier} to "%{_Tier}%%loop-value%"
		else:
			set {_Tier} to loop-value
	set {_Tier} to {_Tier} parsed as number
	if {Balance::%{_uuid}%::%{_profile}%} >= {_Tier}:
		remove {_Tier} from {Balance::%{_uuid}%::%{_profile}%}
		message "&ePurchased %name of {_item}%&e For %moneyComma({_Tier})%&e Coins!" to {_player}
		give {_player} {_item}
	else:
		{_Tier} is set
		message "&cYou Need %{_Tier}%&c Coins To Buy This!" to {_player}
	if {_slot} is 9:
		SkillShopGui({_player})
	if {_slot} is 18:
		SkillShopGearGui({_player})
	if {_slot} is 27:
		SkillShopPotionGui({_player})
	if {_slot} is 36:
		SkillShopMiscGui({_player})
	if {_slot} is 45:
		SellGui({_player})


function SkillShopPotionGUIIndexSlot(player: player, slot: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_item} to slot {_slot} of metadata tag "SkillShopPotionGui" of {_player}
	{_item} is not yellow stained glass pane
	set {_lore} to name of {_item}
	set {_lore::*} to uncolored lore of {_item}
	loop {_lore::*}:
		add 1 to {_lorelines}
	delete line {_lorelines} of lore of {_item}
	if name of {_item} is "&cHealing Potion":
		set {_Type} to true
		set {_Tier} to 100
	if name of {_item} is "&bMana Potion":
		set {_Type} to false
		set {_Tier} to 100
	if {Balance::%{_uuid}%::%{_profile}%} >= {_Tier}:
		if {_Type} is true:
			remove {_Tier} from {Balance::%{_uuid}%::%{_profile}%}
			message "&ePurchased %name of {_item}%&e For %{_Tier}%&e Coins!" to {_player}
			GivePotion({_player}, "Heal")
		else if {_Type} is false:
			remove {_Tier} from {Balance::%{_uuid}%::%{_profile}%}
			message "&ePurchased %name of {_item}%&e For %{_Tier}%&e Coins!" to {_player}
			GivePotion({_player}, "Mana")
	else:
		{_Tier} is set
		message "&cYou Need %moneyComma({_Tier})%&c Coins To Buy This!" to {_player}
	if {_slot} is 9:
		SkillShopGui({_player})
	if {_slot} is 18:
		SkillShopGearGui({_player})
	if {_slot} is 27:
		SkillShopPotionGui({_player})
	if {_slot} is 36:
		SkillShopMiscGui({_player})
	if {_slot} is 45:
		SellGui({_player})



on inventory click:
	if event-slot is player's helmet or player's chestplate or player's leggings or player's boots:
		"%event-inventory%" contains "%player%"
		cancel event

on inventory open:
	set player's helmet to player's helmet


function SkillShopMiscGUIIndexSlot(player: player, slot: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_item} to slot {_slot} of metadata tag "SkillShopMiscGui" of {_player}
	{_item} is not yellow stained glass pane
	if {_slot} is 10:
		set {_lore} to name of {_item}
		set {_lore::*} to uncolored lore of {_item}
		loop {_lore::*}:
			add 1 to {_lorelines}
		delete line {_lorelines} of lore of {_item}
		if "%uncolored {_lore}%" is "Mount Loot Crate":
			set {_Tier} to 20000
		if "%uncolored {_lore}%" is "Personal Bank":
			set {_Tier} to 15000
		if "%uncolored {_lore}%" is "[Jukebox]":
			set {_Tier} to 100000
		if {Balance::%{_uuid}%::%{_profile}%} >= {_Tier}:
			remove {_Tier} from {Balance::%{_uuid}%::%{_profile}%}
			message "&ePurchased %name of {_item}%&e For %{_Tier}%&e Coins!" to {_player}
			give {_player} {_item}
		else:
			{_Tier} is set
			message "&cYou Need %moneyComma({_Tier})%&c Coins To Buy This!" to {_player}
	else if {_slot} is 11:
		set {_lore} to name of {_item}
		set {_lore::*} to uncolored lore of {_item}
		loop {_lore::*}:
			add 1 to {_lorelines}
		delete line {_lorelines} of lore of {_item}
		if line 1 of lore of {_item} is "&eLevel: 1":
			set {_Tier} to 15000
		else:
			if {_item} is a fishing rod:
				set {_Tier} to 1500
			else:
				set {_Tier} to 30000
		if {Balance::%{_uuid}%::%{_profile}%} >= {_Tier}:
			remove {_Tier} from {Balance::%{_uuid}%::%{_profile}%}
			message "&ePurchased %name of {_item}%&e For %{_Tier}%&e Coins!" to {_player}
			if {_Tier} is 15000:
				give {_player} BackPack(1)
			else:
				if {_Tier} is 30000:
					give {_player} BackPack(2)
				else:
					give {_player} {_item}
		else:
			{_Tier} is set
			message "&cYou Need %moneyComma({_Tier})%&c Coins To Buy This!" to {_player}
	if {_slot} is 9:
		SkillShopGui({_player})
	if {_slot} is 18:
		SkillShopGearGui({_player})
	if {_slot} is 27:
		SkillShopPotionGui({_player})
	if {_slot} is 36:
		SkillShopMiscGui({_player})
	if {_slot} is 45:
		SellGui({_player})



	



function SkillShopGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set {_Timer} to difference between {Shop.Timer} and now
	set metadata tag "SkillShopGui" of {_player} to chest inventory with 6 rows named "&6Shop - Skills"
	set slot ((integers between 0 and 9), 17, 18, 26, 27, 35, 36, 44 and (integers between 45 and 53)) of metadata tag "SkillShopGui" of {_player} to yellow stained glass pane named "&a"
	set slot 9 of metadata tag "SkillShopGui" of {_player} to anvil named "&9Skills"
	set slot 8 of metadata tag "SkillShopGui" of {_player} to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	set slot 18 of metadata tag "SkillShopGui" of {_player} to iron chestplate named "&9Gear"
	set slot 27 of metadata tag "SkillShopGui" of {_player} to Potion named "&9Potions"
	set slot 36 of metadata tag "SkillShopGui" of {_player} to ender chest named "&9Misc"
	set slot 45 of metadata tag "SkillShopGui" of {_player} to sunflower named "&9Sell"
	open (metadata tag "SkillShopGui" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true
	loop (integers between 10 and 16):
		set {_item} to {SkillShopGui::%loop-value-9%}
		set slot loop-value of metadata tag "SkillShopGui" of {_player} to {_item}
	loop (integers between 19 and 25):
		set {_item} to {SkillShopGui::%loop-value-12%}
		set slot loop-value of metadata tag "SkillShopGui" of {_player} to {_item}
	loop (integers between 28 and 34):
		set {_item} to {SkillShopGui::%loop-value-21%}
		set slot loop-value of metadata tag "SkillShopGui" of {_player} to {_item}
	loop (integers between 37 and 43):
		set {_item} to {SkillShopGui::%loop-value-24%}
		set slot loop-value of metadata tag "SkillShopGui" of {_player} to {_item}



function SkillShopGearGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set {_Timer} to difference between {Shop.Timer} and now
	set metadata tag "SkillShopGearGui" of {_player} to chest inventory with 6 rows named "&6Shop - Gear"
	set slot ((integers between 0 and 9), 17, 18, 26, 27, 35, 36, 44 and (integers between 45 and 53)) of metadata tag "SkillShopGearGui" of {_player} to yellow stained glass pane named "&a"
	set slot 9 of metadata tag "SkillShopGearGui" of {_player} to anvil named "&9Skills"
	set slot 8 of metadata tag "SkillShopGearGui" of {_player} to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	set slot 18 of metadata tag "SkillShopGearGui" of {_player} to iron chestplate named "&9Gear"
	set slot 27 of metadata tag "SkillShopGearGui" of {_player} to Potion named "&9Potions"
	set slot 36 of metadata tag "SkillShopGearGui" of {_player} to ender chest named "&9Misc"
	set slot 45 of metadata tag "SkillShopGearGui" of {_player} to sunflower named "&9Sell"
	loop (integers between 10 and 16):
		set {_item} to {GearShopGui::%loop-value-9%}
		{GearShopGui::%loop-value-9%} is set
		set slot loop-value of metadata tag "SkillShopGearGui" of {_player} to {_item}
	loop (integers between 19 and 25):
		{GearShopGui::%loop-value-11%} is set
		set {_item} to {GearShopGui::%loop-value-11%}
		set slot loop-value of metadata tag "SkillShopGearGui" of {_player} to {_item}
	loop (integers between 28 and 34):
		{GearShopGui::%loop-value-13%} is set
		set {_item} to {GearShopGui::%loop-value-13%}
		set slot loop-value of metadata tag "SkillShopGearGui" of {_player} to {_item}
	loop (integers between 37 and 43):
		{GearShopGui::%loop-value-15%} is set
		set {_item} to {GearShopGui::%loop-value-15%}
		set slot loop-value of metadata tag "SkillShopGearGui" of {_player} to {_item}
	open (metadata tag "SkillShopGearGui" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function SkillShopPotionGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set {_Timer} to difference between {Shop.Timer} and now
	set metadata tag "SkillShopPotionGui" of {_player} to chest inventory with 6 rows named "&6Shop - Potions"
	set slot ((integers between 0 and 9), 17, 18, 26, 27, 35, 36, 44 and (integers between 45 and 53)) of metadata tag "SkillShopPotionGui" of {_player} to yellow stained glass pane named "&a"
	set slot 9 of metadata tag "SkillShopPotionGui" of {_player} to anvil named "&9Skills"
	set slot 8 of metadata tag "SkillShopPotionGui" of {_player} to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	set slot 18 of metadata tag "SkillShopPotionGui" of {_player} to iron chestplate named "&9Gear"
	set slot 27 of metadata tag "SkillShopPotionGui" of {_player} to Potion named "&9Potions"
	set slot 36 of metadata tag "SkillShopPotionGui" of {_player} to ender chest named "&9Misc"
	set slot 45 of metadata tag "SkillShopPotionGui" of {_player} to sunflower named "&9Sell"
	set slot 10 of metadata tag "SkillShopPotionGui" of {_player} to {PotionShopGui::1}
	set slot 11 of metadata tag "SkillShopPotionGui" of {_player} to {PotionShopGui::2}
	open (metadata tag "SkillShopPotionGui" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true


function SkillShopMiscGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set {_Timer} to difference between {Shop.Timer} and now
	set metadata tag "SkillShopMiscGui" of {_player} to chest inventory with 6 rows named "&6Shop - Misc"
	set slot ((integers between 0 and 9), 17, 18, 26, 27, 35, 36, 44 and (integers between 45 and 53)) of metadata tag "SkillShopMiscGui" of {_player} to yellow stained glass pane named "&a"
	set slot 9 of metadata tag "SkillShopMiscGui" of {_player} to anvil named "&9Skills"
	set slot 8 of metadata tag "SkillShopMiscGui" of {_player} to compass named "&eShop Reload Timer:" with lore "&e%{_Timer} ? ""Unknown""%" and "&8[Click To Update]"
	set slot 18 of metadata tag "SkillShopMiscGui" of {_player} to iron chestplate named "&9Gear"
	set slot 27 of metadata tag "SkillShopMiscGui" of {_player} to Potion named "&9Potions"
	set slot 36 of metadata tag "SkillShopMiscGui" of {_player} to ender chest named "&9Misc"
	set slot 45 of metadata tag "SkillShopMiscGui" of {_player} to sunflower named "&9Sell"
	set {_item} to {MiscShopGui::1}
	set slot 10 of metadata tag "SkillShopMiscGui" of {_player} to {_item}
	set {_item} to {MiscShopGui::2}
	set slot 11 of metadata tag "SkillShopMiscGui" of {_player} to {_item}
	open (metadata tag "SkillShopMiscGui" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true
















on right click on villager:
	name of event-entity is "&6Shop"
	SkillShopGui(player)



command /shopreload:
	permission: staff
	trigger:
		ShopUpdateItemsReload()



#
#
#
#
#
#on load:
every 1 hour:
	ShopUpdateItemsReload()

function ShopUpdateItemsReload():
	ShopUpdateItems()
	wait 5 ticks
	delete {SkillShopGui::*}
	delete {MiscShopGui::*}
	delete {PotionShopGui::*}
	delete {GearShopGui::*}
	loop 28 times:
		chance of 3%:
			set {_item} to random element of {Books3::*}
			add "&ePrice: $10,000" to lore of {_item}
		else:
			chance of 10%:
				set {_item} to random element of {Books2::*}
				add "&ePrice: $3,000" to lore of {_item}
			else:
				set {_item} to random element of {Books1::*}
				add "&ePrice: $500" to lore of {_item}
		add {_item} to {SkillShopGui::*}
	chance of 3%:
		set {_item} to jukebox named "&3[&bJukeBox&3]"
		add "&ePrice: $100,000" to lore of {_item}
	else:
		chance of 10%:
			set {_item} to player head named "&5Mount Loot Crate"
			add "{SkullOwner:{Id:[I;1049324767,745688397,-1636073904,-1503116338],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvY2RiY2E0YjY5ZWFmOGRjYjdhYzM3MjgyMjhkZThhNjQ0NDA3ODcwMTMzNDJkZGFhYmMxYjAwZWViOGVlYzFlMiJ9fX0=""}]}}}" to NBT of {_Item}
			add "&ePrice: $20,000" to lore of {_item}
		else:
			set {_item} to ender chest named "&6Personal Bank"
			add "&ePrice: $15,000" to lore of {_item}
	add {_item} to {MiscShopGui::*}
	chance of 2%:
		set {_item} to BackPack(2)
		add "&ePrice: $30,000" to lore of {_item}
		add {_item} to {MiscShopGui::*}
	else:
		chance of 10%:
			set {_item} to Fishing Rod named "&bFishing Rod"
			add "{Unbreakable:1b}" to nbt of {_item}
			add "{HideFlags:63}" to nbt of {_item}
			add "&ePrice: $1,500" to lore of {_item}
			add {_item} to {MiscShopGui::*}
		else:
			set {_item} to BackPack(1)
			add "&ePrice: $15,000" to lore of {_item}
			add {_item} to {MiscShopGui::*}
	add potion of healing named "&cHealing Potion" with lore "&c+50 HP &7when used" with nbt "{HideFlags:63}" to {PotionShopGui::*}
	add "&ePrice: $100" to lore of {PotionShopGui::1}
	add potion of water breathing named "&bMana Potion" with lore "&b+50 MP &7when used" with nbt "{HideFlags:63}" to {PotionShopGui::*}
	add "&ePrice: $100" to lore of {PotionShopGui::2}
	delete {_item}
	loop 28 times:
		delete {_item}
		set {_Price} to 1
		set {_sell} to 0
		while {_sell} < {_Price}:
			chance of .5%:
				set {_item} to random element of {Gear5ShopGui::*}
				remove {_item} from {Gear5ShopGui::*}
				set {_price} to "Price" tag of nbt of {_item}
				set {_sell} to 10000
				if {_sell} < {_price}:
					add "&ePrice: $%moneyComma({_sell}+{_price})%" to lore of {_item}
					set {_sell} to {_sell}+{_price}
				else:
					add "&ePrice: $10,000" to lore of {_item}
			else:
				chance of 1%:
					set {_item} to random element of {Gear4ShopGui::*}
					remove {_item} from {Gear4ShopGui::*}
					set {_price} to "Price" tag of nbt of {_item}
					set {_sell} to 5000
					if {_sell} < {_price}:
						add "&ePrice: $%moneyComma({_sell}+{_price})%" to lore of {_item}
						set {_sell} to {_sell}+{_price}
					else:
						add "&ePrice: $5,000" to lore of {_item}
				else:
					chance of 3%:
						set {_item} to random element of {Gear3ShopGui::*}
						remove {_item} from {Gear3ShopGui::*}
						set {_price} to "Price" tag of nbt of {_item}
						set {_sell} to 1000
						if {_sell} < {_price}:
							add "&ePrice: $%moneyComma({_sell}+{_price})%" to lore of {_item}
							set {_sell} to {_sell}+{_price}
						else:
							add "&ePrice: $1,000" to lore of {_item}
					else:
						chance of 10%:
							if {Gear2ShopGui::*} is set:
								set {_item} to random element of {Gear2ShopGui::*}
								remove {_item} from {Gear2ShopGui::*}
								set {_price} to "Price" tag of nbt of {_item}
								set {_sell} to 600
								if {_sell} < {_price}:
									add "&ePrice: $%moneyComma({_sell}+{_price})%" to lore of {_item}
									set {_sell} to {_sell}+{_price}
								else:
									add "&ePrice: $600" to lore of {_item}
							else:
								set {_item} to air
						else:
							if {Gear1ShopGui::*} is set:
								set {_item} to random element of {Gear1ShopGui::*}
								remove {_item} from {Gear1ShopGui::*}
								set {_price} to "Price" tag of nbt of {_item}
								set {_sell} to 300
								if {_sell} < {_price}:
									add "&ePrice: $%moneyComma({_sell}+{_price})%" to lore of {_item}
									set {_sell} to {_sell}+{_price}
								else:
									add "&ePrice: $300" to lore of {_item}
							else:
								set {_item} to air
			set {_Price2} to metadata tag "price" of {_item}
			set {_Price} to {_Price2} parsed as number
		add {_item} to {GearShopGui::*}
	set {Shop.Timer} to now
	add 1 hour to {Shop.Timer}



on skript stop:
	delete {Shop.Timer}

on skript start:
	set {Shop.Timer} to now
	add 1 hour to {Shop.Timer}

on load:
	wait 5 ticks
	set {Shop.Timer} to now
	add 1 hour to {Shop.Timer}



#on load:
function ShopUpdateItems():
	if 1 is 1:
		delete {Gear1ShopGui::*}
		delete {Gear2ShopGui::*}
		delete {Gear3ShopGui::*}
		delete {Gear4ShopGui::*}
		delete {Gear5ShopGui::*}
		if 1 is 1:
			add itemGenerator(Leather Boots, ("Brown Crocs"), (1), (1), (""), (1), ("Good luck walking across the barn"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Sword, ("Fractured Sword"), (1), (1), (""), (1), ("Almost in 2 Pieces"), ("Warrior"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Bow, ("Flimsy Bow"), (1), (1), (""), (1), ("Crafted with twine"), ("Archer"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Stick, ("Splintered Wand"), (1), (1), (""), (1), ("Don't poke yourself!"), ("Mage"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Axe, ("Cracked Axe"), (1), (1), (""), (1), ("It's not broken yet"), ("Shaman"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Helmet, ("Ripped Hood"), (1), (1), (""), (1), ("Just to be safe"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Tattered Cloth"), (1), (1), (""), (1), ("Anything to cover up"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Leggings, ("Torn Leggings"), (1), (1), (""), (1), ("They look like jeans"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Boots, ("Broken Sandals"), (1), (1), (""), (1), ("Just go barefoot"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Sword, ("Blade Fragment"), (1), (1), (""), (1), ("Once a sword, always a sword"), ("Warrior"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Bow, ("Worn Bow"), (1), (1), (""), (1), ("Ask your Granddad about the manufacturers "), ("Archer"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Stick, ("Broken Staff"), (1), (1), (""), (1), ("Basically just a wand"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Sword, ("DIY Hatchet"), (1), (1), (""), (1), ("It's automatically a broken tool"), ("Shaman"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Cloth Rags"), (1), (1), (""), (1), ("The raincoat of the old days"), ("Shaman"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Leggings, ("Snapped Splints"), (1), (1), (""), (1), ("Time to revisit the doctor"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			#
			add itemGenerator(Wooden Sword, ("Dull Sword"), (1), (2), (""), (1), ("Almost child friendly"), ("Warrior"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Bow, ("Used Bow"), (1), (2), (""), (1), ("Years of string pulling"), ("Archer"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Stick, ("Smooth Wand"), (1), (2), (""), (1), ("Sweaty hands"), ("Mage"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Wooden Axe, ("Blunt Axe"), (1), (2), (""), (1), ("It's still usable"), ("Shaman"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Helmet, ("Old Cap"), (1), (2), (""), (1), ("For the 90's kids"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Faded Garment"), (1), (2), (""), (1), ("Next level peasantry"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Leggings, ("Gray Slacks"), (1), (2), (""), (1), ("Is the color right?"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Boots, ("Old Boots"), (1), (2), (""), (1), ("It's humid in here"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Wooden Sword, ("Battle-worn Sword"), (1), (2), (""), (1), ("Worn down through many wars"), ("Warrior"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Bow, ("Old Piercer"), (1), (2), (""), (1), ("A common gangster name for it's day"), ("Archer"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Stick, ("Dead-Man's Staff"), (1), (2), (""), (1), ("They said it would be difficult to pry it away"), ("Mage"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Wooden Axe, ("Peasant's Hatchet"), (1), (2), (""), (1), ("Ol' reliable"), ("Shaman"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Helmet, ("Old Man's Beret"), (1), (2), (""), (1), ("My grandfather wore this"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Leather Jerkin"), (1), (2), (""), (1), ("Fashionable for the elderly"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Leggings, ("Brown Trowsers"), (1), (2), (""), (1), ("Quite snazzy!"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Boots, ("Leather Trekkers"), (1), (2), (""), (1), ("For the toughest travellers"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			#
			#
			#
			add itemGenerator(Leather Boots, ("Brown Crocs"), (1), (1), (""), (1), ("Good luck walking across the barn"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Sword, ("Fractured Sword"), (1), (1), (""), (1), ("Almost in 2 Pieces"), ("Warrior"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Bow, ("Flimsy Bow"), (1), (1), (""), (1), ("Crafted with twine"), ("Archer"), (random integer between 1 and 14)) to {_items::*}
			add itemGenerator(Stick, ("Splintered Wand"), (1), (1), (""), (1), ("Don't poke yourself!"), ("Mage"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Axe, ("Cracked Axe"), (1), (1), (""), (1), ("It's not broken yet"), ("Shaman"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Helmet, ("Ripped Hood"), (1), (1), (""), (1), ("Just to be safe"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Tattered Cloth"), (1), (1), (""), (1), ("Anything to cover up"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Leggings, ("Torn Leggings"), (1), (1), (""), (1), ("They look like jeans"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Boots, ("Broken Sandals"), (1), (1), (""), (1), ("Just go barefoot"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Sword, ("Blade Fragment"), (1), (1), (""), (1), ("Once a sword, always a sword"), ("Warrior"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Bow, ("Worn Bow"), (1), (1), (""), (1), ("Ask your Granddad about the manufacturers "), ("Archer"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Stick, ("Broken Staff"), (1), (1), (""), (1), ("Basically just a wand"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Wooden Sword, ("DIY Hatchet"), (1), (1), (""), (1), ("It's automatically a broken tool"), ("Shaman"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Cloth Rags"), (1), (1), (""), (1), ("The raincoat of the old days"), ("Shaman"), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			add itemGenerator(Leather Leggings, ("Snapped Splints"), (1), (1), (""), (1), ("Time to revisit the doctor"), (""), (random integer between 1 and 14)) to {Gear1ShopGui::*}
			#
			add itemGenerator(Wooden Sword, ("Dull Sword"), (1), (2), (""), (1), ("Almost child friendly"), ("Warrior"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Bow, ("Used Bow"), (1), (2), (""), (1), ("Years of string pulling"), ("Archer"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Stick, ("Smooth Wand"), (1), (2), (""), (1), ("Sweaty hands"), ("Mage"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Wooden Axe, ("Blunt Axe"), (1), (2), (""), (1), ("It's still usable"), ("Shaman"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Helmet, ("Old Cap"), (1), (2), (""), (1), ("For the 90's kids"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Faded Garment"), (1), (2), (""), (1), ("Next level peasantry"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Leggings, ("Gray Slacks"), (1), (2), (""), (1), ("Is the color right?"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Boots, ("Old Boots"), (1), (2), (""), (1), ("It's humid in here"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Wooden Sword, ("Battle-worn Sword"), (1), (2), (""), (1), ("Worn down through many wars"), ("Warrior"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Bow, ("Old Piercer"), (1), (2), (""), (1), ("A common gangster name for it's day"), ("Archer"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Stick, ("Dead-Man's Staff"), (1), (2), (""), (1), ("They said it would be difficult to pry it away"), ("Mage"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Wooden Axe, ("Peasant's Hatchet"), (1), (2), (""), (1), ("Ol' reliable"), ("Shaman"), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Helmet, ("Old Man's Beret"), (1), (2), (""), (1), ("My grandfather wore this"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Leather Jerkin"), (1), (2), (""), (1), ("Fashionable for the elderly"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Leggings, ("Brown Trowsers"), (1), (2), (""), (1), ("Quite snazzy!"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			add itemGenerator(Leather Boots, ("Leather Trekkers"), (1), (2), (""), (1), ("For the toughest travellers"), (""), (random integer between 16 and 24)) to {Gear2ShopGui::*}
			#
			#
			#
			add itemGenerator(Wooden Sword, ("Whiddled Cedar"), (1), (3), (""), (1), ("Outdoor wood!"), ("Warrior"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Bow, ("Wooden Bow"), (1), (3), (""), (1), ("A proper bow"), ("Archer"), (random integer between 24 and 34)) to {_items::*}
			add itemGenerator(Stick, ("Oak Staff"), (1), (3), (""), (1), ("Put the stick back!"), ("Mage"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Wooden Axe, ("Wooden Club"), (1), (3), (""), (1), ("OOGA BOOGA"), ("Shaman"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Helmet, ("Wolf Scalp"), (1), (3), (""), (1), ("I smell something"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Chestplate, ("Deer Pelt"), (1), (3), (""), (1), ("Haven't cleaned it"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Leggings, ("Hide Leggings"), (1), (3), (""), (1), ("I feel like a deer"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Boots, ("Cloth Trackers"), (1), (3), (""), (1), ("Nice and comfy"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Wooden Sword, ("Sharpened Dagger"), (1), (3), (""), (1), ("Small stabby stabby"), ("Warrior"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Bow, ("Sideways Crossbow"), (1), (3), (""), (1), ("Isn't this just a regular bow?"), ("Archer"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Stick , ("Dark Oak Staff "), (1), (3), (""), (1), ("Slightly sturdier than the other one! "), ("Mage"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Stone Shovel , ("Big Rock on a Stick "), (1), (3), (""), (1), ("Uhh, it could work as a mace? "), ("Shaman"), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Helmet , ("Cloth Hood "), (1), (3), (""), (1), ("A very basic hood "), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Chestplate , ("Cloth Cape"), (1), (3), (""), (1), ("No need for armor!"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Leggings, ("Toughened Legskins"), (1), (3), (""), (1), ("What did you kill?"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			add itemGenerator(Leather Boots, ("Deer Hooves"), (1), (3), (""), (1), ("Run like a deer :D"), (""), (random integer between 24 and 34)) to {Gear3ShopGui::*}
			#
			add itemGenerator(Iron Sword, ("Scottish Claymore"), (1), (4), (""), (1), ("The classic sword"), ("Warrior"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Bow, ("Long Bow"), (1), (4), (""), (1), ("How do I carry this?"), ("Archer"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Stick, ("Iron-Head Staff"), (1), (4), (""), (1), ("It's like a heavy club"), ("Mage"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Shovel, ("Iron Mace"), (1), (4), (""), (1), ("This deals damage!"), ("Shaman"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Helmet, ("Iron Helmet"), (1), (4), (""), (1), ("It gets stuffy in here"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Chainmail Chestplate, ("Chainmail"), (1), (4), (""), (1), ("All linked up"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Leggings, ("Steel Greeves"), (1), (4), (""), (1), ("No one can hurt me!"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Boots, ("Clunky Sabatons"), (1), (4), (""), (1), ("Clonk Clonk Clonk"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Sword , ("Long Sword "), (1), (4), (""), (1), ("That one the knights always use "), ("Warrior"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Bow, ("Reinforced Bow"), (1), (4), (""), (1), ("Pierce through thick armor"), ("Archer"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Stick, ("Ember Scepter"), (1), (4), (""), (1), ("The flames burn bright!"), ("Mage"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Axe, ("Copper Axe"), (1), (4), (""), (1), ("Cut your enemies to pieces"), ("Shaman"), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Helmet, ("Panoply Topper"), (1), (4), (""), (1), ("Hard to get out"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Chestplate, ("Panoply Plate"), (1), (4), (""), (1), ("Stronger then ever"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Leggings, ("Panoply Stockings"), (1), (4), (""), (1), ("Knights protection"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			add itemGenerator(Iron Boots, ("Panoply Boot"), (1), (4), (""), (1), ("Protect and serve!"), (""), (random integer between 34 and 46)) to {Gear4ShopGui::*}
			#
			add itemGenerator(Iron Sword, ("Glowing Molten Sword"), (1), (5), (""), (1), ("The sword glows with the ambience of burning heat"), ("Warrior"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(Bow, ("Napalm Arrows"), (1), (5), (""), (1), ("The arrows flown by this bow ignite with" and "the psychotic fire of Napalm"), ("Archer"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(Stick, ("Fireball Flinger"), (1), (5), (""), (1), ("Shooting star? No, that's just me my bad"), ("Mage"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(Wooden Axe, ("Spirit Chastiefol"), (1), (5), (""), (1), ("Gifted by the fairies of the forest," and "this weapon grants the user incredible magic power"), ("Shaman"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(skull of ("apexwolf98" parsed as an offline player), ("Helm of the Flame Spirits"), (1), (5), (""), (1), ("This helmet was forged with the cremated remains of once vibrant forests"), (""), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			set {_item} to (itemGenerator(Leather Chestplate, ("Garment of the Flame Spirits"), (1), (5), (""), (1), ("In a ritual, flame spirits gathered in a circle" and "and poured their life force into the making of this garment"), (""), (random integer between 46 and 54)))
			dye {_item} red
			add {_item} to {Gear5ShopGui::*}
			set {_item} to (itemGenerator(Leather Leggings, ("Platelegs of the Flame Spirits"), (1), (5), (""), (1), ("Forged with living fire, and fueled" and "by torrent hatred"), (""), (random integer between 46 and 54)))
			dye {_item} red
			add {_item} to {Gear5ShopGui::*}
			set {_item} to (itemGenerator(Leather Boots, ("Sabatons of the Flame Spirits"), (1), (5), (""), (1), ("You will feel the curl of withering plants under" and "your feet as they burn"), (""), (random integer between 46 and 54)))
			dye {_item} red
			add {_item} to {Gear5ShopGui::*}
			add itemGenerator(Iron Sword , ("Frost-Bit Blade"), (1), (1), (""), (1), ("Drops the temperature of the air" and "everywhere you go"), ("Warrior"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(Bow , ("Bow of Cryogenesis"), (1), (1), (""), (1), ("Birds will freeze and drop like flies" and "as the arrows fly by"), ("Archer"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(Stick , ("Shard of Glaciers"), (1), (1), (""), (1), ("The power of a mountain slide is on your side"), ("Mage"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(Wooden Axe, ("Nature's Wrath"), (1), (1), (""), (1), ("Oh that person doesn't recycle?" and "Just use this"), ("Shaman"), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			add itemGenerator(skull of ("Icewavezero" parsed as an offline player), ("Freezing Shroud of Giants"), (1), (1), (""), (1), ("The giants of the nordic realm crafted this shroud with shards of ice magic"), (""), (random integer between 46 and 54)) to {Gear5ShopGui::*}
			set {_item} to (itemGenerator(Leather Chestplate, ("Freezing Plates of Giants"), (1), (1), (""), (1), ("The ring of hammers pounding on these frost-crusted" and "plates can still be felt"), (""), (random integer between 46 and 54)))
			dye {_item} blue
			add {_item} to {Gear5ShopGui::*}
			set {_item} to (itemGenerator(Leather Leggings, ("Freezing Platelegs of Giants"), (1), (1), (""), (1), ("The frost giants blessed these sheets" and "of metal with sub-zero frost"), (""), (random integer between 46 and 54)))
			dye {_item} blue
			add {_item} to {Gear5ShopGui::*}
			set {_item} to (itemGenerator(Leather Boots, ("Freezing Sabatons of Giants"), (1), (1), (""), (1), ("Did somethnig shatter? Oh, it's" and "just the concrete under you"), (""), (random integer between 46 and 54)))
			dye {_item} blue
			add {_item} to {Gear5ShopGui::*}



every 1 real hour:
	if 1 is 1:
		delete {Gear1Fishing::*}
		delete {Gear2Fishing::*}
		if 1 is 1:
			add itemGenerator(Leather Boots, ("Brown Crocs"), (1), (1), (""), (1), ("Good luck walking across the barn"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Wooden Sword, ("Fractured Sword"), (1), (1), (""), (1), ("Almost in 2 Pieces"), ("Warrior"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Bow, ("Flimsy Bow"), (1), (1), (""), (1), ("Crafted with twine"), ("Archer"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Stick, ("Splintered Wand"), (1), (1), (""), (1), ("Don't poke yourself!"), ("Mage"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Wooden Axe, ("Cracked Axe"), (1), (1), (""), (1), ("It's not broken yet"), ("Shaman"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Leather Helmet, ("Ripped Hood"), (1), (1), (""), (1), ("Just to be safe"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Leather Chestplate, ("Tattered Cloth"), (1), (1), (""), (1), ("Anything to cover up"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Leather Leggings, ("Torn Leggings"), (1), (1), (""), (1), ("They look like jeans"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Leather Boots, ("Broken Sandals"), (1), (1), (""), (1), ("Just go barefoot"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Wooden Sword, ("Blade Fragment"), (1), (1), (""), (1), ("Once a sword, always a sword"), ("Warrior"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Bow, ("Worn Bow"), (1), (1), (""), (1), ("Ask your Granddad about the manufacturers "), ("Archer"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Stick, ("Broken Staff"), (1), (1), (""), (1), ("Basically just a wand"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Wooden Sword, ("DIY Hatchet"), (1), (1), (""), (1), ("It's automatically a broken tool"), ("Shaman"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Leather Chestplate, ("Cloth Rags"), (1), (1), (""), (1), ("The raincoat of the old days"), ("Shaman"), (random integer between 1 and 14)) to {Gear1Fishing::*}
			add itemGenerator(Leather Leggings, ("Snapped Splints"), (1), (1), (""), (1), ("Time to revisit the doctor"), (""), (random integer between 1 and 14)) to {Gear1Fishing::*}
			#
			add itemGenerator(Wooden Sword, ("Dull Sword"), (1), (2), (""), (1), ("Almost child friendly"), ("Warrior"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Bow, ("Used Bow"), (1), (2), (""), (1), ("Years of string pulling"), ("Archer"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Stick, ("Smooth Wand"), (1), (2), (""), (1), ("Sweaty hands"), ("Mage"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Wooden Axe, ("Blunt Axe"), (1), (2), (""), (1), ("It's still usable"), ("Shaman"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Helmet, ("Old Cap"), (1), (2), (""), (1), ("For the 90's kids"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Chestplate, ("Faded Garment"), (1), (2), (""), (1), ("Next level peasantry"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Leggings, ("Gray Slacks"), (1), (2), (""), (1), ("Is the color right?"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Boots, ("Old Boots"), (1), (2), (""), (1), ("It's humid in here"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Wooden Sword, ("Battle-worn Sword"), (1), (2), (""), (1), ("Worn down through many wars"), ("Warrior"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Bow, ("Old Piercer"), (1), (2), (""), (1), ("A common gangster name for it's day"), ("Archer"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Stick, ("Dead-Man's Staff"), (1), (2), (""), (1), ("They said it would be difficult to pry it away"), ("Mage"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Wooden Axe, ("Peasant's Hatchet"), (1), (2), (""), (1), ("Ol' reliable"), ("Shaman"), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Helmet, ("Old Man's Beret"), (1), (2), (""), (1), ("My grandfather wore this"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Chestplate, ("Leather Jerkin"), (1), (2), (""), (1), ("Fashionable for the elderly"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Leggings, ("Brown Trowsers"), (1), (2), (""), (1), ("Quite snazzy!"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
			add itemGenerator(Leather Boots, ("Leather Trekkers"), (1), (2), (""), (1), ("For the toughest travellers"), (""), (random integer between 16 and 24)) to {Gear2Fishing::*}
