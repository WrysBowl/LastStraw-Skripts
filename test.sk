command /genitem [<text>]:
	permission: staff
	trigger:
		if arg-1 is not set:
			message "&2/&aGenItem&b Item Type&2|&bItem Name&2|&bBase Percent&2|&bBase Multiplier&2|&bStat&2|&bStat Values&2|&bLore&2|&bClass&2|&bLevel Requrment"
			message "&2/&aGenItem&b list&2|&bDelete&2|&bReload"
			message "&aUse a | For every new string use a , For More Then 1 Values in A string"
			send formatted "&2EX: <tooltip:Click For Example><suggest command:/genitem Feather|test|1|1|test|1|test|Mage,Archer|1>&a/genitem Feather|test|1|1|test|1|test|Mage,Archer|1"
			stop
		if arg-1 is "list":
			message "&b------------&a[HISTORY]&b------------"
			loop {EnteredItems::*}:
				add 1 to {_number}
				set {_code} to loop-value
				send formatted "<tooltip:Click To View><suggest command:%{_code}%>&2(&a%{_number}%&2)&f %{_code}%"
				message " "
			stop
		if arg-1 is "delete":
			delete {EnteredItems::*}
			stop
		if arg-1 is "reload":
			execute player command "skript reload test"
			stop
		set {_code} to arg-1
		replace all "§" with "&" in {_code}
		set {_code::*} to {_code} split at "|"
		loop {_code::*}:
			add 1 to {_number}
			if {_number} is 1:
				set {_check} to loop-value parsed as item
				set {_code} to loop-value
			else if {_number} is 2 or 5 or 7 or 8:
				set {_codemore::*} to loop-value split at ","
				loop {_codemore::*}:
					add 1 to {_number2}
					if {_value} is not set:
						set {_value} to loop-value-2
					else:
						set {_value} to "%{_value}%"" and ""%loop-value-2%"
				set {_code} to "%{_code}%, (""%{_value}%"")"
				delete {_value}
			else if {_number} is 3 or 4 or 6 or 9:
				set {_codemore::*} to loop-value split at ","
				if size of {_codemore::*} > 0:
					loop {_codemore::*}:
						add 1 to {_number2}
						if {_value} is not set:
							set {_value} to loop-value-2
						else:
							set {_value} to "%{_value}% and %loop-value-2%"
					set {_code} to "%{_code}%, (%{_value}%)"
					delete {_value}
			else:
				set {_code} to "%{_code}%, %loop-value%"
			if {_number} is 3 or 4 or 6 or 9:
				if loop-value parsed as number is not a number:
					set {_check2} to true
		if {_number} is not 9:
			message "&4!ERROR!&c Code: Invaild ## of Strings"
			stop
		if {_check} is not a item:
			message "&4!ERROR!&c Code: Invaild Item"
			stop
		set {_codeSave} to {_code} 
		set {_code} to "add itemGenerator(%{_code}%) to {_drops::*}"
		send formatted "<tooltip:Click To View><suggest command:%{_code}%>%{_code}%"
		give player {_Object}
		set {_value} to {EnteredItems::1}
		set {_value1} to {EnteredItems::2}
		set {_value2} to {EnteredItems::3}
		set {_value3} to {EnteredItems::4}
		set {_value4} to {EnteredItems::5}
		set {EnteredItems::5} to {_value3}
		set {EnteredItems::4} to {_value2}
		set {EnteredItems::3} to {_value1}
		set {EnteredItems::2} to {_value}
		set {EnteredItems::1} to {_code}
		delete {EnteredItems::6}


command /beta:
	permission: staff
	trigger:
		message "&aBeta Player List &2[&a%size of {playerLists::*}%&2]"
		message " "
		loop {playerLists::*}:
			set {_player} to loop-value parsed as offline player
			if {bantime::%loop-value%} is set:
				message "&2- &c[Ban] &a%{_player}% &2[%loop-value%&2]"
			else if {mutetime::%loop-value%} is set:
				message "&2- &e[Mute] &a%{_player}% &2[%loop-value%&2]"
			else:
				message "&2- &a%{_player}% &2[%loop-value%&2]"
			wait 1 tick


function GivePotion(player: player, pot: text):
	loop 42 times:
		set {_slot2} to loop-value - 1
		set {_Islot} to slot {_slot2} of {_player}
		if {_pot} is "Mana":
			if name of {_Islot} contains "Mana":
				set {_slot} to {_Slot2}
				exit 1 loop
		else:
			if name of {_Islot} contains "Heal":
				set {_slot} to {_Slot2}
				exit 1 loop
	if {_Slot} is set:
		set {_X} to "PotionCount" tag of nbt of {_ISlot}
		if {_pot} is "Mana":
			set {_item} to potion of water breathing named "&bMana Potion:&7 %{_X}+1%" with lore "&b+50 MP &7when used" with nbt "{HideFlags:63}"
			set {_add} to {_X}+1
			add "{PotionCount:%{_add}%}" to nbt of {_item}
			set slot {_Slot} of {_player}'s inventory to {_item}
		else:
			set {_item} to potion of healing named "&cHealing Potion:&7 %{_X}+1%" with lore "&c+50 HP &7when used" with nbt "{HideFlags:63}"
			set {_add} to {_X}+1
			add "{PotionCount:%{_add}%}" to nbt of {_item}
			set slot {_Slot} of {_player}'s inventory to {_item}
	else:
		if {_pot} is "Mana":
			set {_item} to potion of water breathing named "&bMana Potion:&7 1" with lore "&b+50 MP &7when used" with nbt "{HideFlags:63}"
			add "{PotionCount:1}" to nbt of {_item}
			give {_player} {_item}
		else:
			set {_item} to potion of healing named "&cHealing Potion:&7 1" with lore "&c+50 HP &7when used" with nbt "{HideFlags:63}"
			add "{PotionCount:1}" to nbt of {_item}
			give {_player} {_item}

command /pot [<text>]:
	permission: staff
	trigger:
		GivePotion(player, "%arg-1%")



command /setteamtp [<text>]:
	permission: staff
	trigger:
		if arg-1 is "Blue":
			set {Blue.Base} to location of player
		else if arg-1 is "Red":
			set {Red.Base} to location of player
		else:
			set {All.Hub} to location of player

command /hub:
	trigger:
		teleport player to {All.Hub}

command /profile:
	trigger:
		if player's world is "Hub":
			profileInv(player, "save")
			wait 1 tick
			set {_uuid} to player's uuid
			set {_player} to player
			set {_profile} to metadata tag "profile" of {_player}
			set {_perm} to uncolored {profiles::%{_uuid}%::%{_profile}%}
			set {_perm} to "nte.%{_perm}%"
			replace " " in {_perm} with ""
			if {_player} has permission "staff":
				set {_perm} to "%{_perm}%.Staff"
			execute console command "lp user %{_player}% permission unset %{_perm}%"
			clear metadata tag "profile" of player
			set {_player} to player
			set {_uuid} to {_player}'s uuid
			set {_profile} to metadata tag "profile" of {_player}
			set {_perm} to uncolored {profiles::%{_uuid}%::%{_profile}%}
			set {_perm} to "nte.%{_perm}%"
			replace " " in {_perm} with ""
			if player has permission "staff":
				set {_perm} to "%{_perm}%.Staff"
			execute console command "lp user %{_player}% permission unset %{_perm}%"
			joinGUI(player)
		else:
			message "&cThis Command Can Only Be Ran In Hub!"


on right click on ender chest:
	cancel event
	VaultGui(player)

on right click with ender chest:
	if name of event-item is "&6Personal Bank":
		cancel event
		VaultGui(player)

function VaultGui(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultGUI" of {_player} to chest inventory with 3 rows named "&6Bank"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultGUI" of {_player} to yellow stained glass pane named "&a"
	set slot (integers between 10 and 16) of metadata tag "VaultGUI" of {_player} to light gray stained glass pane named "&a"
	set {_item} to player head named "&6Bank Vault" with lore "&7Right Click&a +" and "&7Left Click&c -"
	add "{SkullOwner:{Id:[I;1070520302,1259751651,-1190949035,1321843131],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjdhYWRmZjlkZGM1NDZmZGNlYzZlZDU5MTljYzM5ZGZhOGQwYzA3ZmY0YmM2MTNhMTlmMmU2ZDdmMjU5MyJ9fX0=""}]}}}" to NBT of {_Item}
	set {_item2} to player head named "&6Bank Vault" with lore "&7Right Click&a +" and "&7Left Click&c -"
	add "{SkullOwner:{Id:[I;-53074837,-1939846255,-1705548134,871583154],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjljYjNkMTlkYjUyOWEyMTVjZjYyNjk3NTkxY2MxM2ZiOGM3ODZhOGYyN2I3NTI4YzMyYWMyOTg2Yjk2NzBjNCJ9fX0=""}]}}}" to NBT of {_Item2}
	set {_item3} to player head named "&6Personal Item Vault"
	add "{SkullOwner:{Id:[I;441899687,1891713813,-1145002998,2066825560],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNWE3MzZlYjFhN2NlNWE1ZjVkNWIxNjg5MzFmYTMxMzk2Mzg2YzE2MDU2OGI0MTk2NGJhODZjZGI5ZWQ2YmUifX19=""}]}}}" to NBT of {_Item3}
	set {_item2} to player head named "&6Balance" with lore "&6&l•&e Purse: %moneyComma({balance::%{_uuid}%::%{_profile}%} ? 0)%" and "&6&l•&e Bank: %moneyComma({VaultBal::%{_uuid}%::%{_profile}%}) ? 0%"
	add "{SkullOwner:{Id:[I;-631208920,-501202084,-1771491357,-1068018600],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZTM2ZTk0ZjZjMzRhMzU0NjVmY2U0YTkwZjJlMjU5NzYzODllYjk3MDlhMTIyNzM1NzRmZjcwZmQ0ZGFhNjg1MiJ9fX0=""}]}}}" to NBT of {_Item2}
	set slot 13 of metadata tag "VaultGUI" of {_player} to {_item}
	set slot 14 of metadata tag "VaultGUI" of {_player} to {_item2}
	set slot 12 of metadata tag "VaultGUI" of {_player} to {_item3}
	open (metadata tag "VaultGUI" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 13:
		if {_clicktype} contains "right":
			VaultGuiAdd({_player})
		else if {_clicktype} contains "left":
			VaultGuiRemove({_player})
	if {_slot} is 12:
		open {_player}'s enderchest to {_player}



on join:
	set {_uuid} to uuid of player
	if {Interest::%{_uuid}%} is false:
		set {Interest::%{_uuid}%} to true
		set {_profile} to metadata tag "profile" of player
		loop 4 times:
			set {_add} to {VaultBal::%{_uuid}%::%loop-value%}*.01
			add {_add} to {VaultBal::%{_uuid}%::%loop-value%}
		wait 20 seconds
		message "&eYou Earned $%moneyComma({VaultBal::%{_uuid}%::%{_profile}%}*.01) ? 0%&e In Interest While You Were Offline!" to player

function VaultGuiAdd(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultGUIAdd" of {_player} to chest inventory with 3 rows named "&6Clan Vault &e$%moneyComma({VaultBal::%{_uuid}%::%{_profile}%}) ? 0% &a+ "
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultGUIAdd" of {_player} to lime stained glass pane named "&a"
	set slot 8 of metadata tag "VaultGUIAdd" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultGUIAdd" of {_player} to lime wool named "&a+ %{_n}%"
		set {_n} to {_n}*10
		if loop-value is 7:
			set {_n} to {balance::%{_uuid}%::%{_profile}%}
			set slot (loop-value+9) of metadata tag "VaultGUIAdd" of {_player} to lime wool named "&a+ %{_n}%" with lore "&7Deposit all your money!"
	open (metadata tag "VaultGUIAdd" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultGuiRemove(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultGUIRemove" of {_player} to chest inventory with 3 rows named "&6Clan Vault &e$%moneyComma({VaultBal::%{_uuid}%::%{_profile}%}) ? 0% &c-"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultGUIRemove" of {_player} to red stained glass pane named "&a"
	set slot 8 of metadata tag "VaultGUIRemove" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultGUIRemove" of {_player} to red wool named "&c- %{_n}%"
		set {_n} to {_n}*10
		if loop-value is 7:
			set {_n} to {VaultBal::%{_uuid}%::%{_profile}%}
			set slot (loop-value+9) of metadata tag "VaultGUIRemove" of {_player} to red wool named "&c- %{_n}%" with lore "&7Withdraw all your money!"
	open (metadata tag "VaultGUIRemove" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultAddGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15:
		set {_name} to slot {_slot} of metadata tag "VaultGUIAdd" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {balance::%{_uuid}%::%{_profile}%} >= {_name}:
			add {_name} to {VaultBal::%{_uuid}%::%{_profile}%}
			remove {_name} from {balance::%{_uuid}%::%{_profile}%}
			VaultGuiAdd({_player})
	if {_slot} is 16:
		add {balance::%{_uuid}%::%{_profile}%} to {VaultBal::%{_uuid}%::%{_profile}%}
		set {balance::%{_uuid}%::%{_profile}%} to 0
		VaultGuiAdd({_player})

function VaultRemoveGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15 or 16:
		set {_name} to slot {_slot} of metadata tag "VaultGUIRemove" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {VaultBal::%{_uuid}%::%{_profile}%} >= {_name}:
			remove {_name} from {VaultBal::%{_uuid}%::%{_profile}%}
			add {_name} to {balance::%{_uuid}%::%{_profile}%}
			VaultGuiRemove({_player})

function VaultPGuiAdd(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultPGUIAdd" of {_player} to chest inventory with 3 rows named "&6Personal Vault &e$%moneyComma({VaultPBal::%{_uuid}%::%{_profile}%}) ? 0% &a+ "
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultPGUIAdd" of {_player} to lime stained glass pane named "&a"
	set slot 8 of metadata tag "VaultPGUIAdd" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultPGUIAdd" of {_player} to lime wool named "&a+ %{_n}%"
		set {_n} to {_n}*10
	open (metadata tag "VaultPGUIAdd" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultPGuiRemove(player: player):
	set {_uuid} to uuid of {_player}
	set {_profile} to metadata tag "profile" of {_player}
	set metadata tag "VaultPGUIRemove" of {_player} to chest inventory with 3 rows named "&6Personal Vault &e$%moneyComma({VaultPBal::%{_uuid}%::%{_profile}%}) ? 0% &c-"
	set slot ((integers between 0 and 9), 17 and (integers between 18 and 26)) of metadata tag "VaultPGUIRemove" of {_player} to red stained glass pane named "&a"
	set slot 8 of metadata tag "VaultPGUIRemove" of {_player} to barrier named "&cBack"
	set {_n} to 1
	loop 7 times:
		set slot (loop-value+9) of metadata tag "VaultPGUIRemove" of {_player} to red wool named "&c- %{_n}%"
		set {_n} to {_n}*10
	open (metadata tag "VaultPGUIRemove" of {_player}) to {_player}
	set metadata tag "inventoryOpened" of {_player} to true

function VaultPAddGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15 or 16:
		set {_name} to slot {_slot} of metadata tag "VaultPGUIAdd" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {balance::%{_uuid}%::%{_profile}%} >= {_name}:
			add {_name} to {VaultPBal::%{_uuid}%::%{_profile}%}
			remove {_name} from {balance::%{_uuid}%::%{_profile}%}
			VaultPGuiAdd({_player})

function VaultPRemoveGUIIndexSlot(player: player, slot: object, clicktype: object):
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_clicktype} to "%{_clicktype}%"
	if {_slot} is 8:
		VaultGui({_player})
	if {_slot} is 10 or 11 or 12 or 13 or 14 or 15 or 16:
		set {_name} to slot {_slot} of metadata tag "VaultPGUIRemove" of {_player}
		set {_name::*} to name of {_name} split at " "
		set {_name} to {_name::2} parsed as number
		if {VaultPBal::%{_uuid}%::%{_profile}%} >= {_name}:
			remove {_name} from {VaultPBal::%{_uuid}%::%{_profile}%}
			add {_name} to {balance::%{_uuid}%::%{_profile}%}
			VaultPGuiRemove({_player})

on click:
	wait 1 tick
	set player's helmet to player's helmet

on block break:
	player's gamemode is not creative
	player's world is not "Fun"
	cancel event

command /removearrows [<player>]:
	permission: staff
	trigger:
		remove all of the arrows stuck in arg-1

command /ServerStats:
	trigger:
		message ""
		message "&6%player%&6:"
		message "&6 Play Time: %difference between now and {TimePlayed::%player's uuid%} ? ""Unknown""%"
		message "&6 Joined: %{TimePlayed::%player's uuid%} ? ""Unknown""%"
		message "&6Server&6:"
		message "&6 Total Unique Joins: %size of all offline players%"
		message "&6 Total Joins: %{totaljoins} ? 0%"

command /Ping:
	trigger:
		message "%player's ping% ms"


command /walkspeed [<number>]:
	permission: staff
	trigger:
		if arg-1 is not set:
			message "%player's walk speed% [%(player's walk speed*10/3)^3%]"
		else:
			set the player's walk speed to arg-1

function RGB(r:integer,g:integer,b:integer) :: string:
    set {a::*} to "&0","&1","&2","&3","&4","&5","&6","&7","&8","&9","&a","&b","&c","&d","&e" and "&f"
    set {_r::*} to {_r},{_g} and {_b}
    loop {_r::*}:
        set {_st} to join {_st},{a::%((loop-value-mod(loop-value,16))/16+1)%} and {a::%mod(loop-value,16)+1%} with ""
    return "&x%{_st}%"

command /colordmg [<text>]:
	permission: staff
	trigger:
		set {_rand} to "false"
		broadcast "%Rainbow(arg-1, {_rand}) ? ""&cError""%"

function Rainbow(Rainbow.Word: text, R: text) :: string:
	if {_Rainbow.Word} is set:
		set {_text::*} to {_Rainbow.Word} split at ""
		if {_R} is "false":
			set {_red} to 255
			set {_green} to 0
			set {_blue} to 0
		else:
			set {_red} to 255
			set {_green} to 0
			set {_blue} to 0
			set {_RX} to random integer between 1 and 5
		if {_RX} is not set:
			set {_RX} to 5
		set {_check1} to false
		set {_check2} to false
		set {_check3} to false
		loop {_text::*}:
			add 1 to {_test}
			if {_red} is 255:
				set {_check1} to true
			if {_green} is 255:
				set {_check2} to true
			if {_blue} is 255:
				set {_check3} to true
			if {_check1} is true:
				{_check2} is false
				remove {_RX} from {_red}
				add {_RX} to {_green}
			if {_check2} is true:
				{_check3} is false
				remove {_RX} from {_green}
				add {_RX} to {_blue}
			if {_check3} is true:
				remove {_RX} from {_blue}
				add {_RX} to {_red}
			if {_blue} and {_green} is 0:
				{_red} is 255
				set {_check1} to false
				set {_check2} to false
				set {_check3} to false
			set {_save2} to "R %{_red}% G %{_green}% B %{_blue}%"
			if {_save} is {_save2}:
				set {_RX} to random integer between 1 and 5
			set {_save} to {_save2}
			if {_red} > 255:
				set {_red} to 255
			if {_red} < 0:
				set {_red} to 0
			if {_green} > 255:
				set {_green} to 255
			if {_green} < 0:
				set {_green} to 0
			if {_blue} > 255:
				set {_blue} to 255
			if {_blue} < 0:
				set {_blue} to 0

			set {_text::%{_test}%} to colored "%RGB({_red}, {_green}, {_blue})%%{_text::%{_test}%}%"
			if {_msgtext} is set:
				set {_msgtext} to colored "%{_msgtext}%%{_text::%{_test}%}%"
			else:
				set {_msgtext} to colored {_text::%{_test}%}
		return colored {_msgtext}


function speedStat(player: player) :: number:
	set {_uuid} to {_player}'s uuid
	set {_profile} to metadata tag "profile" of {_player}
	set {_x} to ({_player}'s walk speed*10/3)^3.825
	if {_x} > 100:
		set {_x} to 100
	return ({_x})



on first join:
	set {TimePlayed::%player's uuid%} to now

on join:
	wait 1 tick
	add 1 to {totaljoins}
	{TimePlayed::%player's uuid%} is not set
	set {TimePlayed::%player's uuid%} to now

on death:
	DeathFake(player)

function DeathFake(player: player):
	if {_player} is set:
		summon falling stone brick wall at {_player}
		add "{NoGravity:1b}" to nbt of last spawned entity
		add "{CustomNameVisible:1b}" to nbt of last spawned entity
		add "{DropItem:0b}" to nbt of last spawned entity
		add "{Time:1}" to nbt of last spawned entity
		set last spawned entity's display name to "&a%{_player}%&a's Grave"
		set {_sizefalling} to last spawned entity
		set {_time} to 30
		while {_time} > -1:
			set display name of {_sizefalling} to "&a%{_player}%&a's Grave &6[&e%{_time}%&6]"
			add "{Time:1}" to nbt of {_sizefalling}
			remove 1 from {_time}
			wait 1 second
		set display name of {_sizefalling} to "&a%{_player}%&a's Grave &6[&e0&6]"
		wait 1 second
		kill {_grave}
		kill {_sizefalling}

function Enhancments(item: item) :: number:
	if {_item} is set:
		set {_lorelines::*} to name of {_item} split at ""
		set {_line} to size of {_lorelines::*}
		loop {_line} times:
			if {_lorelines::%loop-value%} is "⦿":
				add 1 to {_Jems}
		return {_Jems}

function EnhancmentsSet(item: item,Enhancment: integer,player: Player) :: item:
	if {_item} is set:
		if item amount of {_item} > 1:
			stop
		set {_name::*} to name of {_item} split at ""
		set {_size} to size of {_name::*}
		set {_alllore::*} to {_item}'s lore
		set {_loresize} to size of {_alllore::*}
		set {_saveold} to Enhancments({_item})
		if {_saveold} is not set:
			set {_saveold} to 0
		set {_diference} to (difference between {_saveold} and {_Enhancment})
		loop {_size} times:
			{_name::%loop-value%} is not "⦿"
			if {_name} is not set:
				set {_name} to "%{_name::%loop-value%}%"
			else:
				set {_name} to "%{_name}%%{_name::%loop-value%}%"
		loop {_Enhancment} times:
			if {_jem} is not set:
				set {_jem} to "⦿"
			else:
				set {_jem} to "%{_jem}%⦿"
		set name of {_item} to "%{_name}%&b%{_jem}%"
		set {_lore::*} to line 2 of {_item}'s lore split at "+"
		set {_ExtraValue} to Enhancments({_item})*5
		set line 2 of {_item}'s lore to "%{_lore::1}%&6+(%{_ExtraValue}%&6)"
		set {_lore::*} to line 3 of {_item}'s lore split at "+"
		set line 3 of {_item}'s lore to "%{_lore::1}%&6+(%{_ExtraValue}%&6)"
		set {_line1::*} to line 3 of {_item}'s lore split at " "
		set {_line2::*} to line 2 of {_item}'s lore split at " "
		set {_linexx1::*} to {_line1::4} split at " "
		set {_linexx2::*} to {_line2::2} split at " "
		set {_linexx1::1} to {_linexx1::1} parsed as number
		set {_linexx2::1} to {_linexx2::1} parsed as number
		set {_linez1::*} to {_line1::2} split at "%%"
		set {_linez2::*} to {_line2::5} split at "%%"
		set {_linez2::1} to {_linez2::1} parsed as number
		set {_linez1::1} to {_linez1::1} parsed as number
		set {_ExtraValue} to {_ExtraValue} parsed as number
		set {_valuetoadd1} to ({_linexx2::1}+{_ExtraValue})
		set {_valuetoadd2} to ({_linexx1::1}+{_ExtraValue})
		add "{%{_line2::3}%:%{_valuetoadd1}%}" to {_item}'s nbt
		add "{%{_line1::5}%:%{_valuetoadd2}%}" to {_item}'s nbt
		loop {_diference} times:
			set {_PickPrice} to "Price" tag of nbt of {_Item}
			set {_PickPrice} to {_PickPrice}*(1+(1/10))
			add "{Price:%{_PickPrice}%}" to {_item}'s nbt
		set {_PickPrice} to "Price" tag of nbt of {_Item}
		set line ({_loresize}-1) of {_item}'s lore to "&6⛃ &e %{_PickPrice}%"
		if {_diference} > 0:
			if {_diference} > 1:
				message "&dSuccessfully Put &5%{_diference}%&d Enhancements on your item" to {_player}
			else:
				message "&dSuccessfully Put &5%{_diference}%&d Enhancement on your item" to {_player}
		return {_item}

	

on inventory click:
	cursor slot of player is Purple glazed terracotta
	set {_i} to Enhancments(event-slot)
	event-slot is not air
	event-slot is armor or sword or bow or stick or sunflower or axe or shovel
	name of event-slot is set
	cancel event
	if item amount of event-item > 1:
		message "&cEnhancments Can Only Be Put On 1 Item!"
		stop
	if {_i} is more than 4:
		set event-slot to EnhancmentsSet(event-item, 5, player)
		stop
	set {_add} to Enhancments(event-item)
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 I":
		add 1 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 II":
		add 2 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 III":
		add 3 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 IV":
		add 4 to {_add}
	if cursor slot of player is purple glazed terracotta named "&dEnhancement&5 V":
		add 5 to {_add}
	if {_add} > 5:
		set {_add} to 5
	remove 1 of player's cursor slot from player's cursor slot
	set event-slot to EnhancmentsSet(event-item, {_add}, player)